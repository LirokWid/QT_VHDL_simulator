.TH "sc_boost::_bi::list0" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sc_boost::_bi::list0
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <bind\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBlist0\fP ()"
.br
.ti -1c
.RI "template<\fBclass\fP \fBT\fP > \fBT\fP & \fBoperator[]\fP (\fB_bi::value\fP< \fBT\fP > &v) \fBconst\fP"
.br
.ti -1c
.RI "template<\fBclass\fP \fBT\fP > \fBT\fP \fBconst\fP & \fBoperator[]\fP (\fB_bi::value\fP< \fBT\fP > \fBconst\fP &v) \fBconst\fP"
.br
.ti -1c
.RI "template<\fBclass\fP \fBT\fP > \fBT\fP & \fBoperator[]\fP (\fBreference_wrapper\fP< \fBT\fP > \fBconst\fP &v) \fBconst\fP"
.br
.ti -1c
.RI "template<\fBclass\fP \fBR\fP , \fBclass\fP F , \fBclass\fP \fBL\fP > \fBresult_traits\fP< \fBR\fP, F >::type \fBoperator[]\fP (\fBbind_t\fP< \fBR\fP, F, \fBL\fP > &b) \fBconst\fP"
.br
.ti -1c
.RI "template<\fBclass\fP \fBR\fP , \fBclass\fP F , \fBclass\fP \fBL\fP > \fBresult_traits\fP< \fBR\fP, F >::type \fBoperator[]\fP (\fBbind_t\fP< \fBR\fP, F, \fBL\fP > \fBconst\fP &b) \fBconst\fP"
.br
.ti -1c
.RI "template<\fBclass\fP \fBR\fP , \fBclass\fP F , \fBclass\fP \fBA\fP > \fBR\fP \fBoperator()\fP (\fBtype\fP< \fBR\fP >, F &f, \fBA\fP &, \fBlong\fP)"
.br
.ti -1c
.RI "template<\fBclass\fP \fBR\fP , \fBclass\fP F , \fBclass\fP \fBA\fP > \fBR\fP \fBoperator()\fP (\fBtype\fP< \fBR\fP >, F \fBconst\fP &f, \fBA\fP &, \fBlong\fP) \fBconst\fP"
.br
.ti -1c
.RI "template<\fBclass\fP F , \fBclass\fP \fBA\fP > \fBvoid\fP \fBoperator()\fP (\fBtype\fP< \fBvoid\fP >, F &f, \fBA\fP &, int)"
.br
.ti -1c
.RI "template<\fBclass\fP F , \fBclass\fP \fBA\fP > \fBvoid\fP \fBoperator()\fP (\fBtype\fP< \fBvoid\fP >, F \fBconst\fP &f, \fBA\fP &, int) \fBconst\fP"
.br
.ti -1c
.RI "template<\fBclass\fP \fBV\fP > \fBvoid\fP \fBaccept\fP (\fBV\fP &) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator==\fP (\fBlist0\fP \fBconst\fP &) \fBconst\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "sc_boost::_bi::list0::list0 ()\fR [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<\fBclass\fP \fBV\fP > \fBvoid\fP sc_boost::_bi::list0::accept (\fBV\fP &) const\fR [inline]\fP"

.SS "template<\fBclass\fP \fBR\fP , \fBclass\fP F , \fBclass\fP \fBA\fP > \fBR\fP sc_boost::_bi::list0::operator() (\fBtype\fP< \fBR\fP >, F & f, \fBA\fP &, \fBlong\fP)\fR [inline]\fP"

.SS "template<\fBclass\fP \fBR\fP , \fBclass\fP F , \fBclass\fP \fBA\fP > \fBR\fP sc_boost::_bi::list0::operator() (\fBtype\fP< \fBR\fP >, F \fBconst\fP & f, \fBA\fP &, \fBlong\fP) const\fR [inline]\fP"

.SS "template<\fBclass\fP F , \fBclass\fP \fBA\fP > \fBvoid\fP sc_boost::_bi::list0::operator() (\fBtype\fP< \fBvoid\fP >, F & f, \fBA\fP &, int)\fR [inline]\fP"

.SS "template<\fBclass\fP F , \fBclass\fP \fBA\fP > \fBvoid\fP sc_boost::_bi::list0::operator() (\fBtype\fP< \fBvoid\fP >, F \fBconst\fP & f, \fBA\fP &, int) const\fR [inline]\fP"

.SS "\fBbool\fP sc_boost::_bi::list0::operator== (\fBlist0\fP \fBconst\fP &) const\fR [inline]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBT\fP & sc_boost::_bi::list0::operator[] (\fB_bi::value\fP< \fBT\fP > & v) const\fR [inline]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBT\fP \fBconst\fP  & sc_boost::_bi::list0::operator[] (\fB_bi::value\fP< \fBT\fP > \fBconst\fP & v) const\fR [inline]\fP"

.SS "template<\fBclass\fP \fBR\fP , \fBclass\fP F , \fBclass\fP \fBL\fP > \fBresult_traits\fP< \fBR\fP, F >::type sc_boost::_bi::list0::operator[] (\fBbind_t\fP< \fBR\fP, F, \fBL\fP > & b) const\fR [inline]\fP"

.SS "template<\fBclass\fP \fBR\fP , \fBclass\fP F , \fBclass\fP \fBL\fP > \fBresult_traits\fP< \fBR\fP, F >::type sc_boost::_bi::list0::operator[] (\fBbind_t\fP< \fBR\fP, F, \fBL\fP > \fBconst\fP & b) const\fR [inline]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBT\fP & sc_boost::_bi::list0::operator[] (\fBreference_wrapper\fP< \fBT\fP > \fBconst\fP & v) const\fR [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
