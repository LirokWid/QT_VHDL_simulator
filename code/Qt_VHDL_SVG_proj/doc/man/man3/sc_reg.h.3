.TH "C:/Users/BJRODIER/Documents/QT_REPO/QT_VHDL_simulator/code/Qt_VHDL_SVG_proj/systemc_modules/sc_reg.h" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/BJRODIER/Documents/QT_REPO/QT_VHDL_simulator/code/Qt_VHDL_SVG_proj/systemc_modules/sc_reg.h \- SystemC module that implements a register and a counter\&.  

.SH SYNOPSIS
.br
.PP
\fR#include <systemc\&.h>\fP
.br
\fR#include 'sc_flexint\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBSyscReg< W, CLKEDGE, FLEXINT >\fP"
.br
.RI "The \fBSyscReg\fP class\&. "
.ti -1c
.RI "class \fBSyscCnt< W, CLKEDGE, FLEXINT >\fP"
.br
.RI "The \fBSyscCnt\fP class\&. "
.in -1c
.SH "Detailed Description"
.PP 
SystemC module that implements a register and a counter\&. 

This file contains the definition of the SystemC modules \fBSyscReg\fP and \fBSyscCnt\fP\&. The \fBSyscReg\fP module implements a register with a single data input and output\&. The register is synchronous, \fBi\&.e\fP\&., the output is updated on the rising edge of the clock signal\&. The \fBSyscCnt\fP module implements a counter with a single data output\&.
.PP
Both modules are implemented as template classes that can be instantiated with the following parameters:
.IP "\(bu" 2
W: width of the data bus (default is 1)
.IP "\(bu" 2
CLKEDGE: boolean value that specifies the clock edge to use (true for rising edge, false for falling edge)\&. Default value is true\&.
.PP
.PP
The \fBSyscReg\fP and \fBSyscCnt\fP modules are derived from the \fBSyscFlexInt\fP module, which provides a flexible interface for the reset and enable signals of a module\&. The reset and enable signals can be active high or active low, and can be synchronous or asynchronous\&. The module can be configured to use the reset and enable signals or not, and can be configured to use the rising edge or falling edge of the clock signal\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
