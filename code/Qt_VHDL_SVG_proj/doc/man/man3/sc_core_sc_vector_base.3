.TH "sc_core::sc_vector_base" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sc_core::sc_vector_base
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <sc_vector\&.h>\fP
.PP
Inherits \fBsc_core::sc_object\fP\&.
.PP
Inherited by \fBsc_core::sc_vector< sc_core::sc_in< sc_dt::sc_lv > >\fP, and \fBsc_core::sc_vector< T >\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBcontext_scope\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "\fBtypedef\fP \fBsc_vector_element\fP * \fBhandle_type\fP"
.br
.ti -1c
.RI "\fBtypedef\fP std::vector< \fBhandle_type\fP > \fBstorage_type\fP"
.br
.ti -1c
.RI "\fBtypedef\fP storage_type::size_type \fBsize_type\fP"
.br
.ti -1c
.RI "\fBtypedef\fP storage_type::difference_type \fBdifference_type\fP"
.br
.in -1c

Public Types inherited from \fBsc_core::sc_object\fP
.in +1c
.ti -1c
.RI "\fBtypedef\fP \fBunsigned\fP \fBphase_cb_mask\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBconst\fP \fBchar\fP * \fBkind\fP () \fBconst\fP"
.br
.ti -1c
.RI "std::vector< \fBsc_object\fP * > \fBconst\fP & \fBget_elements\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsize_type\fP \fBsize\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBreport_empty_bind\fP (\fBconst\fP \fBchar\fP *\fBkind_\fP, \fBbool\fP \fBdst_range_\fP) \fBconst\fP"
.br
.in -1c

Public Member Functions inherited from \fBsc_core::sc_object\fP
.in +1c
.ti -1c
.RI "\fBconst\fP \fBchar\fP * \fBname\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBchar\fP * \fBbasename\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBprint\fP (::std::ostream &\fBos\fP=::std::cout) \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBdump\fP (::std::ostream &\fBos\fP=::std::cout) \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBtrace\fP (\fBsc_trace_file\fP *tf) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_simcontext\fP * \fBsimcontext\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBadd_attribute\fP (\fBsc_attr_base\fP &)"
.br
.ti -1c
.RI "\fBsc_attr_base\fP * \fBget_attribute\fP (\fBconst\fP std::string &\fBname_\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_attr_base\fP * \fBget_attribute\fP (\fBconst\fP std::string &\fBname_\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_attr_base\fP * \fBremove_attribute\fP (\fBconst\fP std::string &\fBname_\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBremove_all_attributes\fP ()"
.br
.ti -1c
.RI "int \fBnum_attributes\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_attr_cltn\fP & \fBattr_cltn\fP ()"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_attr_cltn\fP & \fBattr_cltn\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP std::vector< \fBsc_event\fP * > & \fBget_child_events\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP std::vector< \fBsc_object\fP * > & \fBget_child_objects\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBget_parent\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBget_parent_object\fP () \fBconst\fP"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "\fBtypedef\fP storage_type::iterator \fBiterator\fP"
.br
.ti -1c
.RI "\fBtypedef\fP storage_type::const_iterator \fBconst_iterator\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_vector_base\fP ()"
.br
.ti -1c
.RI "\fBsc_vector_base\fP (\fBconst\fP \fBchar\fP *\fBprefix\fP)"
.br
.ti -1c
.RI "\fB~sc_vector_base\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP * \fBat\fP (\fBsize_type\fP \fBi\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBconst\fP * \fBat\fP (\fBsize_type\fP \fBi\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBreserve\fP (\fBsize_type\fP \fBn\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBclear\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBpush_back\fP (\fBvoid\fP *item)"
.br
.ti -1c
.RI "\fBvoid\fP \fBcheck_index\fP (\fBsize_type\fP \fBi\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBcheck_init\fP (\fBsize_type\fP \fBn\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBiterator\fP \fBbegin\fP ()"
.br
.ti -1c
.RI "\fBiterator\fP \fBend\fP ()"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBbegin\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBend\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBsc_object\fP * \fBobject_cast\fP (\fBvoid\fP *) \fBconst\fP =0"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBimplicit_cast\fP (\fBsc_object\fP *p) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBimplicit_cast\fP (\&.\&.\&.) \fBconst\fP"
.br
.in -1c

Protected Member Functions inherited from \fBsc_core::sc_object\fP
.in +1c
.ti -1c
.RI "\fBsc_object\fP ()"
.br
.ti -1c
.RI "\fBsc_object\fP (\fBconst\fP \fBchar\fP *\fBnm\fP)"
.br
.ti -1c
.RI "\fBsc_object\fP (\fBconst\fP \fBsc_object\fP &)"
.br
.ti -1c
.RI "\fBsc_object\fP & \fBoperator=\fP (\fBconst\fP \fBsc_object\fP &)"
.br
.ti -1c
.RI "\fBvirtual\fP \fB~sc_object\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBadd_child_event\fP (\fBsc_event\fP *\fBevent_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBadd_child_object\fP (\fBsc_object\fP *\fBobject_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBbool\fP \fBremove_child_event\fP (\fBsc_event\fP *\fBevent_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBbool\fP \fBremove_child_object\fP (\fBsc_object\fP *\fBobject_p\fP)"
.br
.ti -1c
.RI "\fBphase_cb_mask\fP \fBregister_simulation_phase_callback\fP (\fBphase_cb_mask\fP)"
.br
.ti -1c
.RI "\fBphase_cb_mask\fP \fBunregister_simulation_phase_callback\fP (\fBphase_cb_mask\fP)"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBstatic\fP std::string \fBmake_name\fP (\fBconst\fP \fBchar\fP *\fBprefix\fP, \fBsize_type\fP index)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_vector_base\fP (\fBconst\fP \fBsc_vector_base\fP &)"
.br
.ti -1c
.RI "\fBsc_vector_base\fP & \fBoperator=\fP (\fBconst\fP \fBsc_vector_base\fP &)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBstorage_type\fP \fBvec_\fP"
.br
.ti -1c
.RI "std::vector< \fBsc_object\fP * > * \fBobjs_vec_\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "template<\fBtypename\fP , \fBtypename\fP > \fBclass\fP \fBsc_vector_assembly\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP , \fBtypename\fP > \fBclass\fP \fBsc_vector_iter\fP"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "\fBtypedef\fP storage_type::const_iterator \fBsc_core::sc_vector_base::const_iterator\fP\fR [protected]\fP"

.SS "\fBtypedef\fP storage_type::difference_type \fBsc_core::sc_vector_base::difference_type\fP"

.SS "\fBtypedef\fP \fBsc_vector_element\fP* \fBsc_core::sc_vector_base::handle_type\fP"

.SS "\fBtypedef\fP storage_type::iterator \fBsc_core::sc_vector_base::iterator\fP\fR [protected]\fP"

.SS "\fBtypedef\fP storage_type::size_type \fBsc_core::sc_vector_base::size_type\fP"

.SS "\fBtypedef\fP std::vector< \fBhandle_type\fP > \fBsc_core::sc_vector_base::storage_type\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "sc_core::sc_vector_base::sc_vector_base ()\fR [protected]\fP"

.SS "sc_core::sc_vector_base::sc_vector_base (\fBconst\fP \fBchar\fP * prefix)\fR [inline]\fP, \fR [protected]\fP"

.SS "sc_core::sc_vector_base::~sc_vector_base ()\fR [inline]\fP, \fR [protected]\fP"

.SS "sc_core::sc_vector_base::sc_vector_base (\fBconst\fP \fBsc_vector_base\fP &)\fR [private]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBvoid\fP * sc_core::sc_vector_base::at (\fBsize_type\fP i)\fR [inline]\fP, \fR [protected]\fP"

.SS "\fBvoid\fP \fBconst\fP  * sc_core::sc_vector_base::at (\fBsize_type\fP i) const\fR [inline]\fP, \fR [protected]\fP"

.SS "\fBiterator\fP sc_core::sc_vector_base::begin ()\fR [inline]\fP, \fR [protected]\fP"

.SS "\fBconst_iterator\fP sc_core::sc_vector_base::begin () const\fR [inline]\fP, \fR [protected]\fP"

.SS "\fBvoid\fP sc_core::sc_vector_base::check_index (\fBsize_type\fP i) const\fR [protected]\fP"

.SS "\fBbool\fP sc_core::sc_vector_base::check_init (\fBsize_type\fP n) const\fR [protected]\fP"

.SS "\fBvoid\fP sc_core::sc_vector_base::clear ()\fR [inline]\fP, \fR [protected]\fP"

.SS "\fBiterator\fP sc_core::sc_vector_base::end ()\fR [inline]\fP, \fR [protected]\fP"

.SS "\fBconst_iterator\fP sc_core::sc_vector_base::end () const\fR [inline]\fP, \fR [protected]\fP"

.SS "std::vector< \fBsc_object\fP * > \fBconst\fP  & sc_core::sc_vector_base::get_elements () const"

.SS "\fBsc_object\fP * sc_core::sc_vector_base::implicit_cast ( \&.\&.\&.) const\fR [protected]\fP"

.SS "\fBsc_object\fP * sc_core::sc_vector_base::implicit_cast (\fBsc_object\fP * p) const\fR [inline]\fP, \fR [protected]\fP"

.SS "\fBconst\fP \fBchar\fP * sc_core::sc_vector_base::kind () const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Reimplemented from \fBsc_core::sc_object\fP\&.
.SS "\fBstatic\fP std::string sc_core::sc_vector_base::make_name (\fBconst\fP \fBchar\fP * prefix, \fBsize_type\fP index)\fR [static]\fP, \fR [protected]\fP"

.SS "\fBvirtual\fP \fBsc_object\fP * sc_core::sc_vector_base::object_cast (\fBvoid\fP *) const\fR [protected]\fP, \fR [pure virtual]\fP"

.PP
Implemented in \fBsc_core::sc_vector< T >\fP, and \fBsc_core::sc_vector< sc_core::sc_in< sc_dt::sc_lv > >\fP\&.
.SS "\fBsc_vector_base\fP & sc_core::sc_vector_base::operator= (\fBconst\fP \fBsc_vector_base\fP &)\fR [private]\fP"

.SS "\fBvoid\fP sc_core::sc_vector_base::push_back (\fBvoid\fP * item)\fR [inline]\fP, \fR [protected]\fP"

.SS "\fBvoid\fP sc_core::sc_vector_base::report_empty_bind (\fBconst\fP \fBchar\fP * kind_, \fBbool\fP dst_range_) const"

.SS "\fBvoid\fP sc_core::sc_vector_base::reserve (\fBsize_type\fP n)\fR [inline]\fP, \fR [protected]\fP"

.SS "\fBsize_type\fP sc_core::sc_vector_base::size () const\fR [inline]\fP"

.SH "Friends And Related Symbol Documentation"
.PP 
.SS "template<\fBtypename\fP , \fBtypename\fP > \fBfriend\fP \fBclass\fP \fBsc_vector_assembly\fP\fR [friend]\fP"

.SS "template<\fBtypename\fP , \fBtypename\fP > \fBfriend\fP \fBclass\fP \fBsc_vector_iter\fP\fR [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "std::vector< \fBsc_object\fP* >* sc_core::sc_vector_base::objs_vec_\fR [mutable]\fP, \fR [private]\fP"

.SS "\fBstorage_type\fP sc_core::sc_vector_base::vec_\fR [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
