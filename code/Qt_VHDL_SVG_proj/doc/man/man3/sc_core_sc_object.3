.TH "sc_core::sc_object" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sc_core::sc_object
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <sc_object\&.h>\fP
.PP
Inherited by \fBtlm_utils::peq_with_get< transaction_type >\fP, \fBsc_core::sc_export_base\fP, \fBsc_core::sc_module\fP, \fBsc_core::sc_mutex\fP, \fBsc_core::sc_port_base\fP, \fBsc_core::sc_prim_channel\fP, \fBsc_core::sc_process_b\fP, \fBsc_core::sc_semaphore\fP, \fBsc_core::sc_vector_base\fP, \fBtlm::tlm_analysis_port< T >\fP, \fBtlm_utils::peq_with_cb_and_phase< OWNER, TYPES >\fP, and \fBtlm_utils::peq_with_get< PAYLOAD >\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBhierarchy_scope\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "\fBtypedef\fP \fBunsigned\fP \fBphase_cb_mask\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBconst\fP \fBchar\fP * \fBname\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBchar\fP * \fBbasename\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBprint\fP (::std::ostream &\fBos\fP=::std::cout) \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBdump\fP (::std::ostream &\fBos\fP=::std::cout) \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBtrace\fP (\fBsc_trace_file\fP *tf) \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP \fBchar\fP * \fBkind\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_simcontext\fP * \fBsimcontext\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBadd_attribute\fP (\fBsc_attr_base\fP &)"
.br
.ti -1c
.RI "\fBsc_attr_base\fP * \fBget_attribute\fP (\fBconst\fP std::string &\fBname_\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_attr_base\fP * \fBget_attribute\fP (\fBconst\fP std::string &\fBname_\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_attr_base\fP * \fBremove_attribute\fP (\fBconst\fP std::string &\fBname_\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBremove_all_attributes\fP ()"
.br
.ti -1c
.RI "int \fBnum_attributes\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_attr_cltn\fP & \fBattr_cltn\fP ()"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_attr_cltn\fP & \fBattr_cltn\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP std::vector< \fBsc_event\fP * > & \fBget_child_events\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP std::vector< \fBsc_object\fP * > & \fBget_child_objects\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBget_parent\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBget_parent_object\fP () \fBconst\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_object\fP ()"
.br
.ti -1c
.RI "\fBsc_object\fP (\fBconst\fP \fBchar\fP *\fBnm\fP)"
.br
.ti -1c
.RI "\fBsc_object\fP (\fBconst\fP \fBsc_object\fP &)"
.br
.ti -1c
.RI "\fBsc_object\fP & \fBoperator=\fP (\fBconst\fP \fBsc_object\fP &)"
.br
.ti -1c
.RI "\fBvirtual\fP \fB~sc_object\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBadd_child_event\fP (\fBsc_event\fP *\fBevent_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBadd_child_object\fP (\fBsc_object\fP *\fBobject_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBbool\fP \fBremove_child_event\fP (\fBsc_event\fP *\fBevent_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBbool\fP \fBremove_child_object\fP (\fBsc_object\fP *\fBobject_p\fP)"
.br
.ti -1c
.RI "\fBphase_cb_mask\fP \fBregister_simulation_phase_callback\fP (\fBphase_cb_mask\fP)"
.br
.ti -1c
.RI "\fBphase_cb_mask\fP \fBunregister_simulation_phase_callback\fP (\fBphase_cb_mask\fP)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBdo_simulation_phase_callback\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBsimulation_phase_callback\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBdetach\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBorphan_child_events\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBorphan_child_objects\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsc_object_init\fP (\fBconst\fP \fBchar\fP *\fBnm\fP)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBsc_attr_cltn\fP * \fBm_attr_cltn_p\fP"
.br
.ti -1c
.RI "std::vector< \fBsc_event\fP * > \fBm_child_events\fP"
.br
.ti -1c
.RI "std::vector< \fBsc_object\fP * > \fBm_child_objects\fP"
.br
.ti -1c
.RI "std::string \fBm_name\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBm_parent\fP"
.br
.ti -1c
.RI "\fBsc_simcontext\fP * \fBm_simc\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "\fBclass\fP \fBsc_event\fP"
.br
.ti -1c
.RI "\fBclass\fP \fBsc_module\fP"
.br
.ti -1c
.RI "\fBstruct\fP \fBsc_invoke_method\fP"
.br
.ti -1c
.RI "\fBclass\fP \fBsc_module_dynalloc_list\fP"
.br
.ti -1c
.RI "\fBclass\fP \fBsc_object_manager\fP"
.br
.ti -1c
.RI "\fBclass\fP \fBsc_phase_callback_registry\fP"
.br
.ti -1c
.RI "\fBclass\fP \fBsc_process_b\fP"
.br
.ti -1c
.RI "\fBclass\fP \fBsc_runnable\fP"
.br
.ti -1c
.RI "\fBclass\fP \fBsc_simcontext\fP"
.br
.ti -1c
.RI "\fBclass\fP \fBsc_trace_file_base\fP"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "\fBtypedef\fP \fBunsigned\fP \fBsc_core::sc_object::phase_cb_mask\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "sc_core::sc_object::sc_object ()\fR [protected]\fP"

.SS "sc_core::sc_object::sc_object (\fBconst\fP \fBchar\fP * nm)\fR [protected]\fP"

.SS "sc_core::sc_object::sc_object (\fBconst\fP \fBsc_object\fP &)\fR [protected]\fP"

.SS "\fBvirtual\fP sc_core::sc_object::~sc_object ()\fR [protected]\fP, \fR [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBbool\fP sc_core::sc_object::add_attribute (\fBsc_attr_base\fP &)"

.SS "\fBvirtual\fP \fBvoid\fP sc_core::sc_object::add_child_event (\fBsc_event\fP * event_p)\fR [protected]\fP, \fR [virtual]\fP"

.SS "\fBvirtual\fP \fBvoid\fP sc_core::sc_object::add_child_object (\fBsc_object\fP * object_p)\fR [protected]\fP, \fR [virtual]\fP"

.PP
Reimplemented in \fBsc_core::sc_process_b\fP\&.
.SS "\fBsc_attr_cltn\fP & sc_core::sc_object::attr_cltn ()"

.SS "\fBconst\fP \fBsc_attr_cltn\fP & sc_core::sc_object::attr_cltn () const"

.SS "\fBconst\fP \fBchar\fP * sc_core::sc_object::basename () const"

.SS "\fBvoid\fP sc_core::sc_object::detach ()\fR [private]\fP"

.SS "\fBvoid\fP sc_core::sc_object::do_simulation_phase_callback ()\fR [inline]\fP, \fR [private]\fP"

.SS "\fBvirtual\fP \fBvoid\fP sc_core::sc_object::dump (::std::ostream & os = \fR::std::cout\fP) const\fR [virtual]\fP"

.PP
Reimplemented in \fBsc_core::sc_fifo< T >\fP, \fBsc_core::sc_signal_t< T, POL >\fP, \fBsc_core::sc_signal_t< bool, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_logic, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv< 32 >, POL >\fP, and \fBsc_core::sc_signal_t< sc_dt::sc_lv< W >, POL >\fP\&.
.SS "\fBsc_attr_base\fP * sc_core::sc_object::get_attribute (\fBconst\fP std::string & name_)"

.SS "\fBconst\fP \fBsc_attr_base\fP * sc_core::sc_object::get_attribute (\fBconst\fP std::string & name_) const"

.SS "\fBvirtual\fP \fBconst\fP std::vector< \fBsc_event\fP * > & sc_core::sc_object::get_child_events () const\fR [inline]\fP, \fR [virtual]\fP"

.SS "\fBvirtual\fP \fBconst\fP std::vector< \fBsc_object\fP * > & sc_core::sc_object::get_child_objects () const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Reimplemented in \fBsc_core::sc_module\fP, and \fBsc_core::sc_process_b\fP\&.
.SS "\fBsc_object\fP * sc_core::sc_object::get_parent () const"

.SS "\fBsc_object\fP * sc_core::sc_object::get_parent_object () const\fR [inline]\fP"

.SS "\fBvirtual\fP \fBconst\fP \fBchar\fP * sc_core::sc_object::kind () const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Reimplemented in \fBsc_core::sc_buffer< T, POL >\fP, \fBsc_core::sc_clock\fP, \fBsc_core::sc_event_queue\fP, \fBsc_core::sc_export< IF >\fP, \fBsc_core::sc_export< bw_interface_type >\fP, \fBsc_core::sc_export< tlm::tlm_fifo_get_if< REQ > >\fP, \fBsc_core::sc_export< tlm::tlm_fifo_get_if< RSP > >\fP, \fBsc_core::sc_export< tlm::tlm_fifo_put_if< REQ > >\fP, \fBsc_core::sc_export< tlm::tlm_fifo_put_if< RSP > >\fP, \fBsc_core::sc_export< tlm::tlm_master_if< REQ, RSP > >\fP, \fBsc_core::sc_export< tlm::tlm_slave_if< REQ, RSP > >\fP, \fBsc_core::sc_export< tlm::tlm_transport_if< REQ, RSP > >\fP, \fBsc_core::sc_export< tlm_fw_transport_if< tlm::tlm_base_protocol_types > >\fP, \fBsc_core::sc_export< tlm_fw_transport_if< tlm_base_protocol_types > >\fP, \fBsc_core::sc_export< tlm_fw_transport_if< TYPES > >\fP, \fBsc_core::sc_export< tlm_fw_transport_if<> >\fP, \fBsc_core::sc_fifo< T >\fP, \fBsc_core::sc_fifo_in< T >\fP, \fBsc_core::sc_fifo_out< T >\fP, \fBsc_core::sc_mutex\fP, \fBsc_core::sc_port_base\fP, \fBsc_core::sc_port< IF, N, P >\fP, \fBsc_core::sc_port< bw_interface_type, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< bw_interface_type, N, POL >\fP, \fBsc_core::sc_port< sc_fifo_in_if< T >, 0, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< sc_fifo_out_if< T >, 0, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< sc_signal_in_if< bool >, 1, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< sc_signal_in_if< sc_dt::sc_logic >, 1, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< sc_signal_in_if< sc_dt::sc_lv >, 1, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< sc_signal_in_if< sc_dt::sc_lv< W > >, 1, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< sc_signal_in_if< T >, 1, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< sc_signal_in_if< typename sc_dt::sc_lv >, 1, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< sc_signal_inout_if< bool >, 1, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< sc_signal_inout_if< sc_dt::sc_logic >, 1, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< sc_signal_inout_if< sc_dt::sc_lv >, 1, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< sc_signal_inout_if< sc_dt::sc_lv< W > >, 1, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< sc_signal_inout_if< T >, 1, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< sc_signal_inout_if< typename sc_dt::sc_lv >, 1, SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< tlm::tlm_master_if< REQ, RSP > >\fP, \fBsc_core::sc_port< tlm::tlm_slave_if< REQ, RSP > >\fP, \fBsc_core::sc_port< tlm::tlm_transport_if< REQ, RSP > >\fP, \fBsc_core::sc_port< tlm_fw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, \fBsc_core::sc_port< tlm_fw_transport_if< tlm_base_protocol_types >, N, POL >\fP, \fBsc_core::sc_port< tlm_fw_transport_if< TYPES >, N, POL >\fP, \fBsc_core::sc_port< tlm_fw_transport_if<>, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBsc_core::sc_port< tlm_nonblocking_get_if< T >, 1 >\fP, \fBsc_core::sc_port< tlm_nonblocking_peek_if< T >, 1 >\fP, \fBsc_core::sc_port< tlm_nonblocking_put_if< T >, 1 >\fP, \fBsc_core::sc_prim_channel\fP, \fBsc_core::sc_semaphore\fP, \fBsc_core::sc_signal_channel\fP, \fBsc_core::sc_signal_t< T, POL >\fP, \fBsc_core::sc_signal_t< bool, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_logic, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv< 32 >, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv< W >, POL >\fP, \fBsc_core::sc_in< T >\fP, \fBsc_core::sc_in< sc_dt::sc_lv >\fP, \fBsc_core::sc_in< sc_dt::sc_lv< W > >\fP, \fBsc_core::sc_in< typename sc_dt::sc_lv >\fP, \fBsc_core::sc_in< bool >\fP, \fBsc_core::sc_in< sc_dt::sc_logic >\fP, \fBsc_core::sc_inout< T >\fP, \fBsc_core::sc_inout< bool >\fP, \fBsc_core::sc_inout< sc_dt::sc_lv >\fP, \fBsc_core::sc_inout< sc_dt::sc_lv< W > >\fP, \fBsc_core::sc_inout< typename sc_dt::sc_lv >\fP, \fBsc_core::sc_inout< bool >\fP, \fBsc_core::sc_inout< sc_dt::sc_logic >\fP, \fBsc_core::sc_out< T >\fP, \fBsc_core::sc_out< bool >\fP, \fBsc_core::sc_out< sc_dt::sc_lv >\fP, \fBsc_core::sc_out< typename sc_dt::sc_lv >\fP, \fBsc_core::sc_signal_resolved\fP, \fBsc_core::sc_in_resolved\fP, \fBsc_core::sc_inout_resolved\fP, \fBsc_core::sc_out_resolved\fP, \fBsc_core::sc_signal_rv< W >\fP, \fBsc_core::sc_in_rv< W >\fP, \fBsc_core::sc_inout_rv< W >\fP, \fBsc_core::sc_out_rv< W >\fP, \fBsc_core::sc_cthread_process\fP, \fBsc_core::sc_method_process\fP, \fBsc_core::sc_module\fP, \fBsc_core::sc_thread_process\fP, \fBsc_core::sc_vector_base\fP, \fBtlm::tlm_fifo< T >\fP, \fBtlm::tlm_fifo< REQ >\fP, \fBtlm::tlm_fifo< RSP >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP, \fBtlm::tlm_initiator_socket< BUSWIDTH, TYPES, N, POL >\fP, \fBtlm::tlm_initiator_socket< 32, tlm::tlm_base_protocol_types, 0, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_initiator_socket< BUSWIDTH, tlm::tlm_base_protocol_types, 1, POL >\fP, \fBtlm::tlm_initiator_socket< BUSWIDTH, tlm::tlm_base_protocol_types, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_initiator_socket< BUSWIDTH, tlm::tlm_base_protocol_types, N, POL >\fP, \fBtlm::tlm_initiator_socket< BUSWIDTH, TYPES, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_target_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP, \fBtlm::tlm_target_socket< BUSWIDTH, TYPES, N, POL >\fP, \fBtlm::tlm_target_socket< 32, tlm::tlm_base_protocol_types, 0, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_target_socket< BUSWIDTH, tlm::tlm_base_protocol_types, 1, POL >\fP, \fBtlm::tlm_target_socket< BUSWIDTH, tlm::tlm_base_protocol_types, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_target_socket< BUSWIDTH, tlm::tlm_base_protocol_types, N, POL >\fP, and \fBtlm::tlm_target_socket< BUSWIDTH, TYPES, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP\&.
.SS "\fBconst\fP \fBchar\fP * sc_core::sc_object::name () const\fR [inline]\fP"

.SS "int sc_core::sc_object::num_attributes () const"

.SS "\fBsc_object\fP & sc_core::sc_object::operator= (\fBconst\fP \fBsc_object\fP &)\fR [inline]\fP, \fR [protected]\fP"

.SS "\fBvirtual\fP \fBvoid\fP sc_core::sc_object::orphan_child_events ()\fR [private]\fP, \fR [virtual]\fP"

.SS "\fBvirtual\fP \fBvoid\fP sc_core::sc_object::orphan_child_objects ()\fR [private]\fP, \fR [virtual]\fP"

.SS "\fBvirtual\fP \fBvoid\fP sc_core::sc_object::print (::std::ostream & os = \fR::std::cout\fP) const\fR [virtual]\fP"

.PP
Reimplemented in \fBsc_core::sc_fifo< T >\fP, \fBsc_core::sc_signal_t< T, POL >\fP, \fBsc_core::sc_signal_t< bool, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_logic, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv< 32 >, POL >\fP, and \fBsc_core::sc_signal_t< sc_dt::sc_lv< W >, POL >\fP\&.
.SS "\fBphase_cb_mask\fP sc_core::sc_object::register_simulation_phase_callback (\fBphase_cb_mask\fP)\fR [protected]\fP"

.SS "\fBvoid\fP sc_core::sc_object::remove_all_attributes ()"

.SS "\fBsc_attr_base\fP * sc_core::sc_object::remove_attribute (\fBconst\fP std::string & name_)"

.SS "\fBvirtual\fP \fBbool\fP sc_core::sc_object::remove_child_event (\fBsc_event\fP * event_p)\fR [protected]\fP, \fR [virtual]\fP"

.SS "\fBvirtual\fP \fBbool\fP sc_core::sc_object::remove_child_object (\fBsc_object\fP * object_p)\fR [protected]\fP, \fR [virtual]\fP"

.PP
Reimplemented in \fBsc_core::sc_process_b\fP\&.
.SS "\fBvoid\fP sc_core::sc_object::sc_object_init (\fBconst\fP \fBchar\fP * nm)\fR [private]\fP"

.SS "\fBsc_simcontext\fP * sc_core::sc_object::simcontext () const\fR [inline]\fP"

.SS "\fBvirtual\fP \fBvoid\fP sc_core::sc_object::simulation_phase_callback ()\fR [private]\fP, \fR [virtual]\fP"

.SS "\fBvirtual\fP \fBvoid\fP sc_core::sc_object::trace (\fBsc_trace_file\fP * tf) const\fR [virtual]\fP"

.PP
Reimplemented in \fBsc_core::sc_fifo< T >\fP, \fBsc_core::sc_signal_t< T, POL >\fP, \fBsc_core::sc_signal_t< bool, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_logic, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv< 32 >, POL >\fP, and \fBsc_core::sc_signal_t< sc_dt::sc_lv< W >, POL >\fP\&.
.SS "\fBphase_cb_mask\fP sc_core::sc_object::unregister_simulation_phase_callback (\fBphase_cb_mask\fP)\fR [protected]\fP"

.SH "Friends And Related Symbol Documentation"
.PP 
.SS "\fBfriend\fP \fBclass\fP \fBsc_event\fP\fR [friend]\fP"

.SS "\fBfriend\fP \fBstruct\fP sc_invoke_method\fR [friend]\fP"

.SS "\fBfriend\fP \fBclass\fP \fBsc_module\fP\fR [friend]\fP"

.SS "\fBfriend\fP \fBclass\fP sc_module_dynalloc_list\fR [friend]\fP"

.SS "\fBfriend\fP \fBclass\fP \fBsc_object_manager\fP\fR [friend]\fP"

.SS "\fBfriend\fP \fBclass\fP \fBsc_phase_callback_registry\fP\fR [friend]\fP"

.SS "\fBfriend\fP \fBclass\fP \fBsc_process_b\fP\fR [friend]\fP"

.SS "\fBfriend\fP \fBclass\fP \fBsc_runnable\fP\fR [friend]\fP"

.SS "\fBfriend\fP \fBclass\fP \fBsc_simcontext\fP\fR [friend]\fP"

.SS "\fBfriend\fP \fBclass\fP \fBsc_trace_file_base\fP\fR [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBsc_attr_cltn\fP* sc_core::sc_object::m_attr_cltn_p\fR [mutable]\fP, \fR [private]\fP"

.SS "std::vector<\fBsc_event\fP*> sc_core::sc_object::m_child_events\fR [private]\fP"

.SS "std::vector<\fBsc_object\fP*> sc_core::sc_object::m_child_objects\fR [private]\fP"

.SS "std::string sc_core::sc_object::m_name\fR [private]\fP"

.SS "\fBsc_object\fP* sc_core::sc_object::m_parent\fR [private]\fP"

.SS "\fBsc_simcontext\fP* sc_core::sc_object::m_simc\fR [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
