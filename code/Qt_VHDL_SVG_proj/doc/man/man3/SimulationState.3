.TH "SimulationState" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SimulationState \- The \fBSimulationState\fP class manages the state of the simulation\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <simulationstate\&.h>\fP
.PP
Inherits QObject\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBState\fP { \fBIDLE\fP, \fBIDLE_SVG_LOADED\fP, \fBRUNNING\fP }"
.br
.RI "The State enum represents different states of the simulation\&. "
.in -1c
.SS "Public Slots"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBsetState\fP (\fBState\fP state)"
.br
.RI "Sets the state of the simulation\&. "
.in -1c
.SS "Signals"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBstateChanged\fP (\fBState\fP \fBnewState\fP)"
.br
.RI "Signal emitted when the state of the simulation changes\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSimulationState\fP (QObject *\fBparent\fP=\fBnullptr\fP)"
.br
.RI "Constructs a \fBSimulationState\fP object\&. "
.ti -1c
.RI "\fBState\fP \fBgetState\fP () \fBconst\fP"
.br
.RI "Gets the current state of the simulation\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBState\fP \fBcurrentState\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBSimulationState\fP class manages the state of the simulation\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "\fBenum\fP \fBSimulationState::State\fP"

.PP
The State enum represents different states of the simulation\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIIDLE \fP\fP
The simulation is idle\&. 
.TP
\fB\fIIDLE_SVG_LOADED \fP\fP
The simulation is idle with an SVG file loaded\&. 
.TP
\fB\fIRUNNING \fP\fP
The simulation is running\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SimulationState::SimulationState (QObject * parent = \fR\fBnullptr\fP\fP)\fR [explicit]\fP"

.PP
Constructs a \fBSimulationState\fP object\&. 
.PP
\fBParameters\fP
.RS 4
\fIparent\fP The parent object\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "\fBSimulationState::State\fP SimulationState::getState () const"

.PP
Gets the current state of the simulation\&. 
.PP
\fBReturns\fP
.RS 4
The current state of the simulation\&. 
.RE
.PP

.SS "\fBvoid\fP SimulationState::setState (\fBState\fP state)\fR [slot]\fP"

.PP
Sets the state of the simulation\&. 
.PP
\fBParameters\fP
.RS 4
\fIstate\fP The new state of the simulation\&. 
.RE
.PP

.SS "\fBvoid\fP SimulationState::stateChanged (\fBState\fP newState)\fR [signal]\fP"

.PP
Signal emitted when the state of the simulation changes\&. 
.PP
\fBParameters\fP
.RS 4
\fInewState\fP The new state of the simulation\&. 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "\fBState\fP SimulationState::currentState\fR [private]\fP"
The current state of the simulation\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
