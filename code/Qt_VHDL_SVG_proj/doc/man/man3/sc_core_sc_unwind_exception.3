.TH "sc_core::sc_unwind_exception" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sc_core::sc_unwind_exception
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <sc_except\&.h>\fP
.PP
Inherits std::exception\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBvirtual\fP \fBbool\fP \fBis_reset\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP \fBchar\fP * \fBwhat\fP () \fBconst\fP \fBSC_NOEXCEPT_\fP"
.br
.ti -1c
.RI "\fBsc_unwind_exception\fP (\fBconst\fP \fBsc_unwind_exception\fP &)"
.br
.ti -1c
.RI "\fBvirtual\fP \fB~sc_unwind_exception\fP () \fBSC_NOEXCEPT_\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_unwind_exception\fP (\fBsc_process_b\fP *\fBtarget_p\fP, \fBbool\fP \fBis_reset\fP=\fBfalse\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBactive\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBclear\fP () \fBconst\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_unwind_exception\fP & \fBoperator=\fP (\fBconst\fP \fBsc_unwind_exception\fP &)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBsc_process_b\fP * \fBm_proc_p\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBbool\fP \fBm_is_reset\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "\fBclass\fP \fBsc_simcontext\fP"
.br
.ti -1c
.RI "\fBclass\fP \fBsc_process_b\fP"
.br
.ti -1c
.RI "\fBclass\fP \fBsc_method_process\fP"
.br
.ti -1c
.RI "\fBclass\fP \fBsc_thread_process\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBsc_thread_cor_fn\fP (\fBvoid\fP *arg)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "sc_core::sc_unwind_exception::sc_unwind_exception (\fBconst\fP \fBsc_unwind_exception\fP & that)\fR [inline]\fP"

.SS "\fBvirtual\fP sc_core::sc_unwind_exception::~sc_unwind_exception ()\fR [virtual]\fP"

.SS "sc_core::sc_unwind_exception::sc_unwind_exception (\fBsc_process_b\fP * target_p, \fBbool\fP is_reset = \fR\fBfalse\fP\fP)\fR [explicit]\fP, \fR [protected]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBbool\fP sc_core::sc_unwind_exception::active () const\fR [protected]\fP"

.SS "\fBvoid\fP sc_core::sc_unwind_exception::clear () const\fR [protected]\fP"

.SS "\fBvirtual\fP \fBbool\fP sc_core::sc_unwind_exception::is_reset () const\fR [inline]\fP, \fR [virtual]\fP"

.SS "\fBsc_unwind_exception\fP & sc_core::sc_unwind_exception::operator= (\fBconst\fP \fBsc_unwind_exception\fP &)\fR [private]\fP"

.SS "\fBvirtual\fP \fBconst\fP \fBchar\fP * sc_core::sc_unwind_exception::what () const\fR [virtual]\fP"

.SH "Friends And Related Symbol Documentation"
.PP 
.SS "\fBfriend\fP \fBclass\fP \fBsc_method_process\fP\fR [friend]\fP"

.SS "\fBfriend\fP \fBclass\fP \fBsc_process_b\fP\fR [friend]\fP"

.SS "\fBfriend\fP \fBclass\fP \fBsc_simcontext\fP\fR [friend]\fP"

.SS "\fBvoid\fP sc_thread_cor_fn (\fBvoid\fP * arg)\fR [friend]\fP"

.SS "\fBfriend\fP \fBclass\fP \fBsc_thread_process\fP\fR [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBconst\fP \fBbool\fP sc_core::sc_unwind_exception::m_is_reset\fR [private]\fP"

.SS "\fBsc_process_b\fP* sc_core::sc_unwind_exception::m_proc_p\fR [mutable]\fP, \fR [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
