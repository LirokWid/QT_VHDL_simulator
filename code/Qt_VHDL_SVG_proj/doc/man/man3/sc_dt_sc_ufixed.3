.TH "sc_dt::sc_ufixed< W, I, Q, O, N >" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sc_dt::sc_ufixed< W, I, Q, O, N >
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <sc_ufixed\&.h>\fP
.PP
Inherits \fBsc_dt::sc_ufix\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_ufixed\fP (\fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufixed\fP (\fBconst\fP \fBsc_fxcast_switch\fP &, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufixed\fP (\fBconst\fP \fBsc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP > &)"
.br
.ti -1c
.RI "\fBsc_ufixed\fP & \fBoperator=\fP (\fBconst\fP \fBsc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP > &)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_fxval\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_fxval\fP \fBoperator\-\-\fP (int)"
.br
.ti -1c
.RI "\fBsc_ufixed\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBsc_ufixed\fP & \fBoperator\-\-\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBsc_dt::sc_ufix\fP
.in +1c
.ti -1c
.RI "\fBsc_ufix\fP (\fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (int, int, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (\fBsc_q_mode\fP, \fBsc_o_mode\fP, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (\fBsc_q_mode\fP, \fBsc_o_mode\fP, int, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (int, int, \fBsc_q_mode\fP, \fBsc_o_mode\fP, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (int, int, \fBsc_q_mode\fP, \fBsc_o_mode\fP, int, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (\fBconst\fP \fBsc_fxcast_switch\fP &, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (int, int, \fBconst\fP \fBsc_fxcast_switch\fP &, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (\fBsc_q_mode\fP, \fBsc_o_mode\fP, \fBconst\fP \fBsc_fxcast_switch\fP &, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (\fBsc_q_mode\fP, \fBsc_o_mode\fP, int, \fBconst\fP \fBsc_fxcast_switch\fP &, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (int, int, \fBsc_q_mode\fP, \fBsc_o_mode\fP, \fBconst\fP \fBsc_fxcast_switch\fP &, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (int, int, \fBsc_q_mode\fP, \fBsc_o_mode\fP, int, \fBconst\fP \fBsc_fxcast_switch\fP &, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (\fBconst\fP \fBsc_fxtype_params\fP &, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (\fBconst\fP \fBsc_fxtype_params\fP &, \fBconst\fP \fBsc_fxcast_switch\fP &, \fBsc_fxnum_observer\fP *=0)"
.br
.ti -1c
.RI "\fBsc_ufix\fP (\fBconst\fP \fBsc_ufix\fP &)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_ufix\fP \fBoperator~\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_ufix\fP & \fBoperator=\fP (\fBconst\fP \fBsc_ufix\fP &)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_fxval\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_fxval\fP \fBoperator\-\-\fP (int)"
.br
.ti -1c
.RI "\fBsc_ufix\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBsc_ufix\fP & \fBoperator\-\-\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBsc_dt::sc_fxnum\fP
.in +1c
.ti -1c
.RI "\fBconst\fP \fBsc_fxval\fP \fBoperator\-\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_fxval\fP \fBoperator+\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_fxval\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_fxval\fP \fBoperator\-\-\fP (int)"
.br
.ti -1c
.RI "\fBsc_fxnum\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBsc_fxnum\fP & \fBoperator\-\-\fP ()"
.br
.ti -1c
.RI "\fBsc_fxnum_bitref_r\fP \fBoperator[]\fP (int) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_fxnum_bitref\fP \fBoperator[]\fP (int)"
.br
.ti -1c
.RI "\fBsc_fxnum_bitref_r\fP \fBbit\fP (int) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_fxnum_bitref\fP \fBbit\fP (int)"
.br
.ti -1c
.RI "\fBsc_fxnum_subref_r\fP \fBoperator()\fP (int, int) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_fxnum_subref\fP \fBoperator()\fP (int, int)"
.br
.ti -1c
.RI "\fBsc_fxnum_subref_r\fP \fBrange\fP (int, int) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_fxnum_subref\fP \fBrange\fP (int, int)"
.br
.ti -1c
.RI "\fBsc_fxnum_subref_r\fP \fBoperator()\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_fxnum_subref\fP \fBoperator()\fP ()"
.br
.ti -1c
.RI "\fBsc_fxnum_subref_r\fP \fBrange\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_fxnum_subref\fP \fBrange\fP ()"
.br
.ti -1c
.RI "\fBoperator double\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBshort\fP \fBto_short\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBunsigned\fP \fBshort\fP \fBto_ushort\fP () \fBconst\fP"
.br
.ti -1c
.RI "int \fBto_int\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBunsigned\fP int \fBto_uint\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBlong\fP \fBto_long\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBunsigned\fP \fBlong\fP \fBto_ulong\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBint64\fP \fBto_int64\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBuint64\fP \fBto_uint64\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBfloat\fP \fBto_float\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBdouble\fP \fBto_double\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP std::string \fBto_string\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP std::string \fBto_string\fP (\fBsc_numrep\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP std::string \fBto_string\fP (\fBsc_numrep\fP, \fBbool\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP std::string \fBto_string\fP (\fBsc_fmt\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP std::string \fBto_string\fP (\fBsc_numrep\fP, \fBsc_fmt\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP std::string \fBto_string\fP (\fBsc_numrep\fP, \fBbool\fP, \fBsc_fmt\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP std::string \fBto_dec\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP std::string \fBto_bin\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP std::string \fBto_oct\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP std::string \fBto_hex\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBis_neg\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBis_zero\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBis_normal\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBquantization_flag\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoverflow_flag\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_fxval\fP \fBvalue\fP () \fBconst\fP"
.br
.ti -1c
.RI "int \fBwl\fP () \fBconst\fP"
.br
.ti -1c
.RI "int \fBiwl\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_q_mode\fP \fBq_mode\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_o_mode\fP \fBo_mode\fP () \fBconst\fP"
.br
.ti -1c
.RI "int \fBn_bits\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_fxtype_params\fP & \fBtype_params\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_fxcast_switch\fP & \fBcast_switch\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBprint\fP (::std::ostream &=::std::cout) \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBscan\fP (::std::istream &=::std::cin)"
.br
.ti -1c
.RI "\fBvoid\fP \fBdump\fP (::std::ostream &=::std::cout) \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBobserver_read\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBget_bit\fP (int) \fBconst\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Protected Member Functions inherited from \fBsc_dt::sc_fxnum\fP
.in +1c
.ti -1c
.RI "\fBsc_fxnum_observer\fP * \fBobserver\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBcast\fP ()"
.br
.ti -1c
.RI "\fBsc_fxnum\fP (\fBconst\fP \fBsc_fxtype_params\fP &, \fBsc_enc\fP, \fBconst\fP \fBsc_fxcast_switch\fP &, \fBsc_fxnum_observer\fP *)"
.br
.ti -1c
.RI "\fB~sc_fxnum\fP ()"
.br
.ti -1c
.RI "\fBconst\fP \fBscfx_rep\fP * \fBget_rep\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBset_bit\fP (int, \fBbool\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBget_slice\fP (int, int, \fBsc_bv_base\fP &) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBset_slice\fP (int, int, \fBconst\fP \fBsc_bv_base\fP &)"
.br
.ti -1c
.RI "\fBsc_fxnum_observer\fP * \fBlock_observer\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBunlock_observer\fP (\fBsc_fxnum_observer\fP *) \fBconst\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<int W, int I, \fBsc_q_mode\fP Q, \fBsc_o_mode\fP O, int N> \fBsc_dt::sc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP >::sc_ufixed (\fBsc_fxnum_observer\fP * observer_ = \fR0\fP)\fR [inline]\fP, \fR [explicit]\fP"

.SS "template<int W, int I, \fBsc_q_mode\fP Q, \fBsc_o_mode\fP O, int N> \fBsc_dt::sc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP >::sc_ufixed (\fBconst\fP \fBsc_fxcast_switch\fP & cast_sw, \fBsc_fxnum_observer\fP * observer_ = \fR0\fP)\fR [inline]\fP, \fR [explicit]\fP"

.SS "template<int W, int I, \fBsc_q_mode\fP Q, \fBsc_o_mode\fP O, int N> \fBsc_dt::sc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP >::sc_ufixed (\fBconst\fP \fBsc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP > & a)\fR [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<int W, int I, \fBsc_q_mode\fP Q, \fBsc_o_mode\fP O, int N> \fBsc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP > & \fBsc_dt::sc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP >\fB::operator\fP++ ()\fR [inline]\fP"

.SS "template<int W, int I, \fBsc_q_mode\fP Q, \fBsc_o_mode\fP O, int N> \fBconst\fP \fBsc_fxval\fP \fBsc_dt::sc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP >\fB::operator\fP++ (int)\fR [inline]\fP"

.SS "template<int W, int I, \fBsc_q_mode\fP Q, \fBsc_o_mode\fP O, int N> \fBsc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP > & \fBsc_dt::sc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP >\fB::operator\fP\-\- ()\fR [inline]\fP"

.SS "template<int W, int I, \fBsc_q_mode\fP Q, \fBsc_o_mode\fP O, int N> \fBconst\fP \fBsc_fxval\fP \fBsc_dt::sc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP >\fB::operator\fP\-\- (int)\fR [inline]\fP"

.SS "template<int W, int I, \fBsc_q_mode\fP Q, \fBsc_o_mode\fP O, int N> \fBsc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP > & \fBsc_dt::sc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP >\fB::operator\fP= (\fBconst\fP \fBsc_ufixed\fP< \fBW\fP, \fBI\fP, \fBQ\fP, \fBO\fP, \fBN\fP > & a)\fR [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
