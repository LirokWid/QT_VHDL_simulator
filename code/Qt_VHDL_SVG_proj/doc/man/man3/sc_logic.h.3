.TH "C:/Users/BJRODIER/Documents/QT_REPO/QT_VHDL_simulator/code/Ressources/SystemC/include/sysc/datatypes/bit/sc_logic.h" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/BJRODIER/Documents/QT_REPO/QT_VHDL_simulator/code/Ressources/SystemC/include/sysc/datatypes/bit/sc_logic.h
.SH SYNOPSIS
.br
.PP
\fR#include <cstdio>\fP
.br
\fR#include 'sysc/kernel/sc_cmnhdr\&.h'\fP
.br
\fR#include 'sysc/kernel/sc_macros\&.h'\fP
.br
\fR#include 'sysc/utils/sc_mempool\&.h'\fP
.br
\fR#include 'sysc/datatypes/bit/sc_bit\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBsc_dt::sc_logic\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBsc_dt\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#\fBdefine\fP \fBDEFN_ASN_OP_T\fP(\fBop\fP,  \fBtp\fP)"
.br
.ti -1c
.RI "#\fBdefine\fP \fBDEFN_ASN_OP\fP(\fBop\fP)"
.br
.ti -1c
.RI "#\fBdefine\fP \fBDEFN_BIN_OP_T\fP(\fBret\fP,  \fBop\fP,  \fBtp\fP)"
.br
.ti -1c
.RI "#\fBdefine\fP \fBDEFN_BIN_OP\fP(\fBret\fP,  \fBop\fP)"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBsc_dt::sc_logic_value_t\fP { \fBsc_dt::Log_0\fP = 0, \fBsc_dt::Log_1\fP, \fBsc_dt::Log_Z\fP, \fBsc_dt::Log_X\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBconst\fP \fBsc_logic\fP \fBsc_dt::operator&\fP (\fBconst\fP \fBsc_logic\fP &\fBa\fP, \fBconst\fP \fBsc_logic\fP &\fBb\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_logic\fP \fBsc_dt::operator|\fP (\fBconst\fP \fBsc_logic\fP &\fBa\fP, \fBconst\fP \fBsc_logic\fP &\fBb\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_logic\fP \fBsc_dt::operator^\fP (\fBconst\fP \fBsc_logic\fP &\fBa\fP, \fBconst\fP \fBsc_logic\fP &\fBb\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBsc_dt::operator==\fP (\fBconst\fP \fBsc_logic\fP &\fBa\fP, \fBconst\fP \fBsc_logic\fP &\fBb\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBsc_dt::operator!=\fP (\fBconst\fP \fBsc_logic\fP &\fBa\fP, \fBconst\fP \fBsc_logic\fP &\fBb\fP)"
.br
.ti -1c
.RI "inline::std::ostream & \fBsc_dt::operator<<\fP (::std::ostream &\fBos\fP, \fBconst\fP \fBsc_logic\fP &\fBa\fP)"
.br
.ti -1c
.RI "inline::std::istream & \fBsc_dt::operator>>\fP (::std::istream &\fBis\fP, \fBsc_logic\fP &\fBa\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBSC_API\fP \fBconst\fP \fBsc_logic\fP \fBsc_dt::SC_LOGIC_0\fP"
.br
.ti -1c
.RI "\fBSC_API\fP \fBconst\fP \fBsc_logic\fP \fBsc_dt::SC_LOGIC_1\fP"
.br
.ti -1c
.RI "\fBSC_API\fP \fBconst\fP \fBsc_logic\fP \fBsc_dt::SC_LOGIC_Z\fP"
.br
.ti -1c
.RI "\fBSC_API\fP \fBconst\fP \fBsc_logic\fP \fBsc_dt::SC_LOGIC_X\fP"
.br
.ti -1c
.RI "\fBSC_API\fP \fBconst\fP \fBsc_logic\fP \fBsc_dt::sc_logic_0\fP"
.br
.ti -1c
.RI "\fBSC_API\fP \fBconst\fP \fBsc_logic\fP \fBsc_dt::sc_logic_1\fP"
.br
.ti -1c
.RI "\fBSC_API\fP \fBconst\fP \fBsc_logic\fP \fBsc_dt::sc_logic_Z\fP"
.br
.ti -1c
.RI "\fBSC_API\fP \fBconst\fP \fBsc_logic\fP \fBsc_dt::sc_logic_X\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#\fBdefine\fP DEFN_ASN_OP(\fBop\fP)"
\fBValue:\fP.PP
.nf
    DEFN_ASN_OP_T(op, sc_logic_value_t)            \\
    DEFN_ASN_OP_T(op, bool)                        \\
    DEFN_ASN_OP_T(op, char)                        \\
    DEFN_ASN_OP_T(op, int )                        \\
    DEFN_ASN_OP_T(op, const sc_bit& )
.fi

.SS "#\fBdefine\fP DEFN_ASN_OP_T(\fBop\fP, \fBtp\fP)"
\fBValue:\fP.PP
.nf
    sc_logic& operator op ( tp v )                 \\
        { *this op sc_logic( v ); return *this; }
.fi

.SS "#\fBdefine\fP DEFN_BIN_OP(\fBret\fP, \fBop\fP)"
\fBValue:\fP.PP
.nf
    DEFN_BIN_OP_T(ret,op,sc_logic_value_t)             \\
    DEFN_BIN_OP_T(ret,op,bool)                         \\
    DEFN_BIN_OP_T(ret,op,char)                         \\
    DEFN_BIN_OP_T(ret,op,int)
.fi

.SS "#\fBdefine\fP DEFN_BIN_OP_T(\fBret\fP, \fBop\fP, \fBtp\fP)"
\fBValue:\fP.PP
.nf
    inline ret operator op ( const sc_logic& a, tp b ) \\
        { return ( a op sc_logic( b ) ); }             \\
    inline ret operator op ( tp a, const sc_logic& b ) \\
        { return ( sc_logic( a ) op b ); }
.fi

.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
