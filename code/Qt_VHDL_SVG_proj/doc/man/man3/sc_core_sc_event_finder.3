.TH "sc_core::sc_event_finder" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sc_core::sc_event_finder
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <sc_event_finder\&.h>\fP
.PP
Inherited by \fBsc_core::sc_event_finder_t< IF >\fP, and \fBtlm::tlm_event_finder_t< IF, T >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBconst\fP \fBsc_port_base\fP & \fBport\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fB~sc_event_finder\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP \fBsc_event\fP & \fBfind_event\fP (\fBsc_interface\fP *\fBif_p\fP=0) \fBconst\fP =0"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "template<\fBtypename\fP \fBIF\fP > \fBstatic\fP \fBsc_event_finder\fP & \fBcached_create\fP (\fBsc_event_finder\fP *&\fBcache_p\fP, \fBconst\fP \fBsc_port_base\fP &\fBport_\fP, \fBconst\fP \fBsc_event\fP &(IF::*\fBef_p\fP)() \fBconst\fP)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_event_finder\fP (\fBconst\fP \fBsc_port_base\fP &)"
.br
.ti -1c
.RI "\fBvoid\fP \fBreport_error\fP (\fBconst\fP \fBchar\fP *id, \fBconst\fP \fBchar\fP *\fBadd_msg\fP=0) \fBconst\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_event_finder\fP ()"
.br
.ti -1c
.RI "\fBsc_event_finder\fP (\fBconst\fP \fBsc_event_finder\fP &)"
.br
.ti -1c
.RI "\fBsc_event_finder\fP & \fBoperator=\fP (\fBconst\fP \fBsc_event_finder\fP &)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBconst\fP \fBsc_port_base\fP & \fBm_port\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "\fBclass\fP \fBsc_simcontext\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBvirtual\fP sc_core::sc_event_finder::~sc_event_finder ()\fR [virtual]\fP"

.SS "sc_core::sc_event_finder::sc_event_finder (\fBconst\fP \fBsc_port_base\fP &)\fR [protected]\fP"

.SS "sc_core::sc_event_finder::sc_event_finder ()\fR [private]\fP"

.SS "sc_core::sc_event_finder::sc_event_finder (\fBconst\fP \fBsc_event_finder\fP &)\fR [private]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<\fBclass\fP \fBIF\fP > \fBsc_event_finder\fP & sc_core::sc_event_finder::cached_create (\fBsc_event_finder\fP *& cache_p, \fBconst\fP \fBsc_port_base\fP & port_, \fBconst\fP \fBsc_event\fP &(IF::*)() \fBconst\fP ef_p)\fR [inline]\fP, \fR [static]\fP"

.SS "\fBvirtual\fP \fBconst\fP \fBsc_event\fP & sc_core::sc_event_finder::find_event (\fBsc_interface\fP * if_p = \fR0\fP) const\fR [pure virtual]\fP"

.PP
Implemented in \fBtlm::tlm_event_finder_t< IF, T >\fP, and \fBsc_core::sc_event_finder_t< IF >\fP\&.
.SS "\fBsc_event_finder\fP & sc_core::sc_event_finder::operator= (\fBconst\fP \fBsc_event_finder\fP &)\fR [private]\fP"

.SS "\fBconst\fP \fBsc_port_base\fP & sc_core::sc_event_finder::port () const\fR [inline]\fP"

.SS "\fBvoid\fP sc_core::sc_event_finder::report_error (\fBconst\fP \fBchar\fP * id, \fBconst\fP \fBchar\fP * add_msg = \fR0\fP) const\fR [protected]\fP"

.SH "Friends And Related Symbol Documentation"
.PP 
.SS "\fBfriend\fP \fBclass\fP \fBsc_simcontext\fP\fR [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBconst\fP \fBsc_port_base\fP& sc_core::sc_event_finder::m_port\fR [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
