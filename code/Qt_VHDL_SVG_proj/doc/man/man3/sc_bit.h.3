.TH "C:/Users/BJRODIER/Documents/QT_REPO/QT_VHDL_simulator/code/Ressources/SystemC/include/sysc/datatypes/bit/sc_bit.h" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/BJRODIER/Documents/QT_REPO/QT_VHDL_simulator/code/Ressources/SystemC/include/sysc/datatypes/bit/sc_bit.h
.SH SYNOPSIS
.br
.PP
\fR#include 'sysc/datatypes/int/sc_nbdefs\&.h'\fP
.br
\fR#include <iostream>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBsc_dt::sc_bit\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBsc_dt\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#\fBdefine\fP \fBDEFN_TO_VALUE_T\fP(\fBtp\fP)"
.br
.ti -1c
.RI "#\fBdefine\fP \fBDEFN_CTOR_T\fP(\fBtp\fP)"
.br
.ti -1c
.RI "#\fBdefine\fP \fBDEFN_ASN_OP_T\fP(\fBop\fP,  \fBtp\fP)"
.br
.ti -1c
.RI "#\fBdefine\fP \fBDEFN_ASN_OP\fP(\fBop\fP)"
.br
.ti -1c
.RI "#\fBdefine\fP \fBDEFN_BIN_FUN_T\fP(\fBret\fP,  \fBfun\fP,  \fBtp\fP)"
.br
.ti -1c
.RI "#\fBdefine\fP \fBDEFN_BIN_FUN\fP(\fBret\fP,  \fBfun\fP)"
.br
.ti -1c
.RI "#\fBdefine\fP \fBDEFN_TRN_FUN_T\fP(\fBfun\fP,  \fBtp\fP)"
.br
.ti -1c
.RI "#\fBdefine\fP \fBDEFN_TRN_FUN\fP(\fBfun\fP)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBsc_dt::sc_deprecated_sc_bit\fP ()"
.br
.ti -1c
.RI "\fBbool\fP \fBsc_dt::operator==\fP (\fBconst\fP \fBsc_bit\fP &\fBa\fP, \fBconst\fP \fBsc_bit\fP &\fBb\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBsc_dt::operator!=\fP (\fBconst\fP \fBsc_bit\fP &\fBa\fP, \fBconst\fP \fBsc_bit\fP &\fBb\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBsc_dt::equal\fP (\fBconst\fP \fBsc_bit\fP &\fBa\fP, \fBconst\fP \fBsc_bit\fP &\fBb\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBsc_dt::not_equal\fP (\fBconst\fP \fBsc_bit\fP &\fBa\fP, \fBconst\fP \fBsc_bit\fP &\fBb\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_bit\fP \fBsc_dt::operator~\fP (\fBconst\fP \fBsc_bit\fP &\fBa\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_bit\fP \fBsc_dt::b_not\fP (\fBconst\fP \fBsc_bit\fP &\fBa\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsc_dt::b_not\fP (\fBsc_bit\fP &\fBr\fP, \fBconst\fP \fBsc_bit\fP &\fBa\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_bit\fP \fBsc_dt::operator&\fP (\fBconst\fP \fBsc_bit\fP &\fBa\fP, \fBconst\fP \fBsc_bit\fP &\fBb\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_bit\fP \fBsc_dt::operator|\fP (\fBconst\fP \fBsc_bit\fP &\fBa\fP, \fBconst\fP \fBsc_bit\fP &\fBb\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_bit\fP \fBsc_dt::operator^\fP (\fBconst\fP \fBsc_bit\fP &\fBa\fP, \fBconst\fP \fBsc_bit\fP &\fBb\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_bit\fP \fBsc_dt::b_and\fP (\fBconst\fP \fBsc_bit\fP &\fBa\fP, \fBconst\fP \fBsc_bit\fP &\fBb\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_bit\fP \fBsc_dt::b_or\fP (\fBconst\fP \fBsc_bit\fP &\fBa\fP, \fBconst\fP \fBsc_bit\fP &\fBb\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_bit\fP \fBsc_dt::b_xor\fP (\fBconst\fP \fBsc_bit\fP &\fBa\fP, \fBconst\fP \fBsc_bit\fP &\fBb\fP)"
.br
.ti -1c
.RI "inline::std::ostream & \fBsc_dt::operator<<\fP (::std::ostream &\fBos\fP, \fBconst\fP \fBsc_bit\fP &\fBa\fP)"
.br
.ti -1c
.RI "inline::std::istream & \fBsc_dt::operator>>\fP (::std::istream &\fBis\fP, \fBsc_bit\fP &\fBa\fP)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#\fBdefine\fP DEFN_ASN_OP(\fBop\fP)"
\fBValue:\fP.PP
.nf
    DEFN_ASN_OP_T(op,int) \\
    DEFN_ASN_OP_T(op,bool) \\
    DEFN_ASN_OP_T(op,char)
.fi

.SS "#\fBdefine\fP DEFN_ASN_OP_T(\fBop\fP, \fBtp\fP)"
\fBValue:\fP.PP
.nf
    sc_bit& operator op( tp b ) \\
       { return ( *this op sc_bit( b ) ); }
.fi

.SS "#\fBdefine\fP DEFN_BIN_FUN(\fBret\fP, \fBfun\fP)"
\fBValue:\fP.PP
.nf
      DEFN_BIN_FUN_T(ret,fun,bool) \\
      DEFN_BIN_FUN_T(ret,fun,char) \\
      DEFN_BIN_FUN_T(ret,fun,int)
.fi

.SS "#\fBdefine\fP DEFN_BIN_FUN_T(\fBret\fP, \fBfun\fP, \fBtp\fP)"
\fBValue:\fP.PP
.nf
    inline ret fun( const sc_bit& a, tp b ) \\
       { return fun(a, sc_bit(b) ); }      \\
    inline ret fun( tp b, const sc_bit& a ) \\
       { return fun( sc_bit(a), b ); }
.fi

.SS "#\fBdefine\fP DEFN_CTOR_T(\fBtp\fP)"
\fBValue:\fP.PP
.nf
    explicit sc_bit( tp a )          \\
       : m_val( to_value(a) )       \\
       { sc_deprecated_sc_bit(); }
.fi

.SS "#\fBdefine\fP DEFN_TO_VALUE_T(\fBtp\fP)"
\fBValue:\fP.PP
.nf
    static bool to_value( tp i )         \\
       { return to_value( (int) i); }
.fi

.SS "#\fBdefine\fP DEFN_TRN_FUN(\fBfun\fP)"
\fBValue:\fP.PP
.nf
    inline void fun( sc_bit& r, const sc_bit& a, const sc_bit& b ) \\
        { r = fun( a , b ); }                                      \\
    DEFN_TRN_FUN_T(fun,int)                                        \\
    DEFN_TRN_FUN_T(fun,bool)                                       \\
    DEFN_TRN_FUN_T(fun,char)
.fi

.SS "#\fBdefine\fP DEFN_TRN_FUN_T(\fBfun\fP, \fBtp\fP)"
\fBValue:\fP.PP
.nf
    inline void fun( sc_bit& r, const sc_bit& a, tp b )            \\
        { r = fun( a, sc_bit(b) ); }                               \\
    inline void fun( sc_bit& r, tp a, const sc_bit& b )            \\
        { r = fun( sc_bit(a), b ); }
.fi

.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
