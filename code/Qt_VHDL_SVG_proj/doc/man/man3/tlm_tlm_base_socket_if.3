.TH "tlm::tlm_base_socket_if" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tlm::tlm_base_socket_if
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <tlm_base_socket_if\&.h>\fP
.PP
Inherited by \fBtlm::tlm_base_initiator_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP, \fBtlm::tlm_base_target_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, and \fBtlm::tlm_base_target_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBvirtual\fP \fBsc_core::sc_port_base\fP & \fBget_port_base\fP ()=0"
.br
.ti -1c
.RI "\fBvirtual\fP \fBsc_core::sc_port_base\fP \fBconst\fP & \fBget_port_base\fP () \fBconst\fP =0"
.br
.ti -1c
.RI "\fBvirtual\fP \fBsc_core::sc_export_base\fP & \fBget_export_base\fP ()=0"
.br
.ti -1c
.RI "\fBvirtual\fP \fBsc_core::sc_export_base\fP \fBconst\fP & \fBget_export_base\fP () \fBconst\fP =0"
.br
.ti -1c
.RI "\fBvirtual\fP \fBunsigned\fP int \fBget_bus_width\fP () \fBconst\fP =0"
.br
.ti -1c
.RI "\fBvirtual\fP \fBsc_core::sc_type_index\fP \fBget_protocol_types\fP () \fBconst\fP =0"
.br
.ti -1c
.RI "\fBvirtual\fP \fBtlm_socket_category\fP \fBget_socket_category\fP () \fBconst\fP =0"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBvirtual\fP \fB~tlm_base_socket_if\fP ()"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBvirtual\fP tlm::tlm_base_socket_if::~tlm_base_socket_if ()\fR [inline]\fP, \fR [protected]\fP, \fR [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBvirtual\fP \fBunsigned\fP int tlm::tlm_base_socket_if::get_bus_width () const\fR [pure virtual]\fP"

.PP
Implemented in \fBtlm::tlm_base_initiator_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_target_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, and \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP\&.
.SS "\fBvirtual\fP \fBsc_core::sc_export_base\fP \fBconst\fP  & tlm::tlm_base_socket_if::get_export_base () const\fR [pure virtual]\fP"

.PP
Implemented in \fBtlm::tlm_base_initiator_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_target_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, and \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP\&.
.SS "\fBvirtual\fP \fBsc_core::sc_export_base\fP & tlm::tlm_base_socket_if::get_export_base ()\fR [pure virtual]\fP"

.PP
Implemented in \fBtlm::tlm_base_initiator_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_target_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, and \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP\&.
.SS "\fBvirtual\fP \fBsc_core::sc_port_base\fP \fBconst\fP  & tlm::tlm_base_socket_if::get_port_base () const\fR [pure virtual]\fP"

.PP
Implemented in \fBtlm::tlm_base_initiator_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_target_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, and \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP\&.
.SS "\fBvirtual\fP \fBsc_core::sc_port_base\fP & tlm::tlm_base_socket_if::get_port_base ()\fR [pure virtual]\fP"

.PP
Implemented in \fBtlm::tlm_base_initiator_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_target_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, and \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP\&.
.SS "\fBvirtual\fP \fBsc_core::sc_type_index\fP tlm::tlm_base_socket_if::get_protocol_types () const\fR [pure virtual]\fP"

.PP
Implemented in \fBtlm::tlm_initiator_socket< BUSWIDTH, TYPES, N, POL >\fP, \fBtlm::tlm_initiator_socket< 32, tlm::tlm_base_protocol_types, 0, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_initiator_socket< BUSWIDTH, tlm::tlm_base_protocol_types, 1, POL >\fP, \fBtlm::tlm_initiator_socket< BUSWIDTH, tlm::tlm_base_protocol_types, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_initiator_socket< BUSWIDTH, tlm::tlm_base_protocol_types, N, POL >\fP, \fBtlm::tlm_initiator_socket< BUSWIDTH, TYPES, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_target_socket< BUSWIDTH, TYPES, N, POL >\fP, \fBtlm::tlm_target_socket< 32, tlm::tlm_base_protocol_types, 0, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_target_socket< BUSWIDTH, tlm::tlm_base_protocol_types, 1, POL >\fP, \fBtlm::tlm_target_socket< BUSWIDTH, tlm::tlm_base_protocol_types, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_target_socket< BUSWIDTH, tlm::tlm_base_protocol_types, N, POL >\fP, and \fBtlm::tlm_target_socket< BUSWIDTH, TYPES, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP\&.
.SS "\fBvirtual\fP \fBtlm_socket_category\fP tlm::tlm_base_socket_if::get_socket_category () const\fR [pure virtual]\fP"

.PP
Implemented in \fBtlm::tlm_base_initiator_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, \fBtlm::tlm_base_initiator_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, FW_IF, BW_IF, N, POL >\fP, \fBtlm::tlm_base_target_socket< 32, tlm_fw_transport_if< tlm_base_protocol_types >, tlm_bw_transport_if< tlm_base_protocol_types >, 1, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< tlm::tlm_base_protocol_types >, tlm_bw_transport_if< tlm::tlm_base_protocol_types >, N, POL >\fP, \fBtlm::tlm_base_target_socket< BUSWIDTH, tlm_fw_transport_if< TYPES >, tlm_bw_transport_if< TYPES >, N, POL >\fP, \fBtlm_utils::multi_init_base< BUSWIDTH, TYPES, N, POL >\fP, \fBtlm_utils::multi_init_base< 32, tlm::tlm_base_protocol_types, 0, sc_core::SC_ONE_OR_MORE_BOUND >\fP, \fBtlm_utils::multi_init_base< BUSWIDTH, tlm::tlm_base_protocol_types, N, POL >\fP, \fBtlm_utils::multi_target_base< BUSWIDTH, TYPES, N, POL >\fP, \fBtlm_utils::multi_target_base< 32, tlm::tlm_base_protocol_types, 0, sc_core::SC_ONE_OR_MORE_BOUND >\fP, and \fBtlm_utils::multi_target_base< BUSWIDTH, tlm::tlm_base_protocol_types, N, POL >\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
