.TH "tlm_utils::simple_initiator_socket_tagged_b< MODULE, BUSWIDTH, TYPES, POL >::process" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tlm_utils::simple_initiator_socket_tagged_b< MODULE, BUSWIDTH, TYPES, POL >::process
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBtlm::tlm_bw_transport_if< TYPES >\fP, and \fBtlm_utils::convenience_socket_cb_holder\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "\fBtypedef\fP \fBsync_enum_type\fP(MODULE::* \fBTransportPtr\fP) (int, \fBtransaction_type\fP &, \fBphase_type\fP &, \fBsc_core::sc_time\fP &)"
.br
.ti -1c
.RI "\fBtypedef\fP \fBvoid\fP(MODULE::* \fBInvalidateDirectMemPtr\fP) (int, \fBsc_dt::uint64\fP, \fBsc_dt::uint64\fP)"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBprocess\fP (\fBsimple_socket_base\fP *\fBowner\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBset_transport_user_id\fP (int id)"
.br
.ti -1c
.RI "\fBvoid\fP \fBset_invalidate_dmi_user_id\fP (int id)"
.br
.ti -1c
.RI "\fBvoid\fP \fBset_transport_ptr\fP (\fBMODULE\fP *\fBmod\fP, \fBTransportPtr\fP p)"
.br
.ti -1c
.RI "\fBvoid\fP \fBset_invalidate_direct_mem_ptr\fP (\fBMODULE\fP *\fBmod\fP, \fBInvalidateDirectMemPtr\fP p)"
.br
.ti -1c
.RI "\fBsync_enum_type\fP \fBnb_transport_bw\fP (\fBtransaction_type\fP &\fBtrans\fP, \fBphase_type\fP &\fBphase\fP, \fBsc_core::sc_time\fP &t)"
.br
.ti -1c
.RI "\fBvoid\fP \fBinvalidate_direct_mem_ptr\fP (\fBsc_dt::uint64\fP \fBstart_range\fP, \fBsc_dt::uint64\fP \fBend_range\fP)"
.br
.in -1c

Public Member Functions inherited from \fBsc_core::sc_interface\fP
.in +1c
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBregister_port\fP (\fBsc_port_base\fP &\fBport_\fP, \fBconst\fP \fBchar\fP *\fBif_typename_\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP \fBsc_event\fP & \fBdefault_event\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fB~sc_interface\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBMODULE\fP * \fBm_mod\fP"
.br
.ti -1c
.RI "\fBTransportPtr\fP \fBm_transport_ptr\fP"
.br
.ti -1c
.RI "\fBInvalidateDirectMemPtr\fP \fBm_invalidate_direct_mem_ptr\fP"
.br
.ti -1c
.RI "int \fBm_transport_user_id\fP"
.br
.ti -1c
.RI "int \fBm_invalidate_direct_mem_user_id\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Protected Member Functions inherited from \fBsc_core::sc_interface\fP
.in +1c
.ti -1c
.RI "\fBsc_interface\fP ()"
.br
.in -1c

Protected Member Functions inherited from \fBtlm_utils::convenience_socket_cb_holder\fP
.in +1c
.ti -1c
.RI "\fBconvenience_socket_cb_holder\fP (\fBconvenience_socket_base\fP *\fBowner\fP)"
.br
.in -1c
.in +1c
.ti -1c
.RI "\fBvoid\fP \fBdisplay_warning\fP (\fBconst\fP \fBchar\fP *msg) \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBdisplay_error\fP (\fBconst\fP \fBchar\fP *msg) \fBconst\fP"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> \fBtypedef\fP \fBvoid\fP(MODULE::* \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::InvalidateDirectMemPtr) (int, \fBsc_dt::uint64\fP, \fBsc_dt::uint64\fP)"

.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> \fBtypedef\fP \fBsync_enum_type\fP(MODULE::* \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::TransportPtr) (int, \fBtransaction_type\fP &, \fBphase_type\fP &, \fBsc_core::sc_time\fP &)"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::process (\fBsimple_socket_base\fP * owner)\fR [inline]\fP, \fR [explicit]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> \fBvoid\fP \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::invalidate_direct_mem_ptr (\fBsc_dt::uint64\fP start_range, \fBsc_dt::uint64\fP end_range)\fR [inline]\fP, \fR [virtual]\fP"

.PP
Implements \fBtlm::tlm_bw_direct_mem_if\fP\&.
.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> \fBsync_enum_type\fP \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::nb_transport_bw (\fBtransaction_type\fP & trans, \fBphase_type\fP & phase, \fBsc_core::sc_time\fP & t)\fR [inline]\fP, \fR [virtual]\fP"

.PP
Implements \fBtlm::tlm_bw_nonblocking_transport_if< TYPES::tlm_payload_type, TYPES::tlm_phase_type >\fP\&.
.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> \fBvoid\fP \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::set_invalidate_direct_mem_ptr (\fBMODULE\fP * mod, \fBInvalidateDirectMemPtr\fP p)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> \fBvoid\fP \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::set_invalidate_dmi_user_id (int id)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> \fBvoid\fP \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::set_transport_ptr (\fBMODULE\fP * mod, \fBTransportPtr\fP p)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> \fBvoid\fP \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::set_transport_user_id (int id)\fR [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> \fBInvalidateDirectMemPtr\fP \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::m_invalidate_direct_mem_ptr\fR [private]\fP"

.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> int \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::m_invalidate_direct_mem_user_id\fR [private]\fP"

.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> \fBMODULE\fP* \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::m_mod\fR [private]\fP"

.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> \fBTransportPtr\fP \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::m_transport_ptr\fR [private]\fP"

.SS "template<\fBtypename\fP \fBMODULE\fP , \fBunsigned\fP int BUSWIDTH, \fBtypename\fP \fBTYPES\fP , \fBsc_core::sc_port_policy\fP POL = sc_core::SC_ONE_OR_MORE_BOUND> int \fBtlm_utils::simple_initiator_socket_tagged_b\fP< \fBMODULE\fP, \fBBUSWIDTH\fP, \fBTYPES\fP, \fBPOL\fP >::process::m_transport_user_id\fR [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
