.TH "C:/Users/BJRODIER/Documents/QT_REPO/QT_VHDL_simulator/code/Ressources/SystemC/include/sysc/datatypes/fx/scfx_utils.h" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/BJRODIER/Documents/QT_REPO/QT_VHDL_simulator/code/Ressources/SystemC/include/sysc/datatypes/fx/scfx_utils.h
.SH SYNOPSIS
.br
.PP
\fR#include 'sysc/datatypes/fx/sc_fxdefs\&.h'\fP
.br
\fR#include 'sysc/datatypes/fx/scfx_params\&.h'\fP
.br
\fR#include 'sysc/datatypes/fx/scfx_string\&.h'\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBsc_dt\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#\fBdefine\fP \fBMSB_STATEMENT\fP(\fBn\fP)   \fBif\fP( \fBx\fP >> \fBn\fP ) { \fBx\fP >>= \fBn\fP; \fBi\fP += \fBn\fP; }"
.br
.ti -1c
.RI "#\fBdefine\fP \fBLSB_STATEMENT\fP(\fBn\fP)   \fBif\fP( \fBx\fP << \fBn\fP ) { \fBx\fP <<= \fBn\fP; \fBi\fP \-= \fBn\fP; }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBsc_dt::scfx_find_msb\fP (\fBunsigned\fP \fBlong\fP \fBx\fP)"
.br
.ti -1c
.RI "int \fBsc_dt::scfx_find_lsb\fP (\fBunsigned\fP \fBlong\fP \fBx\fP)"
.br
.ti -1c
.RI "int \fBsc_dt::scfx_parse_sign\fP (\fBconst\fP \fBchar\fP *&s, \fBbool\fP &\fBsign_char\fP)"
.br
.ti -1c
.RI "\fBsc_numrep\fP \fBsc_dt::scfx_parse_prefix\fP (\fBconst\fP \fBchar\fP *&s)"
.br
.ti -1c
.RI "int \fBsc_dt::scfx_parse_base\fP (\fBconst\fP \fBchar\fP *&s)"
.br
.ti -1c
.RI "\fBbool\fP \fBsc_dt::scfx_is_equal\fP (\fBconst\fP \fBchar\fP *\fBa\fP, \fBconst\fP \fBchar\fP *\fBb\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBsc_dt::scfx_is_nan\fP (\fBconst\fP \fBchar\fP *s)"
.br
.ti -1c
.RI "\fBbool\fP \fBsc_dt::scfx_is_inf\fP (\fBconst\fP \fBchar\fP *s)"
.br
.ti -1c
.RI "\fBbool\fP \fBsc_dt::scfx_exp_start\fP (\fBconst\fP \fBchar\fP *s)"
.br
.ti -1c
.RI "\fBbool\fP \fBsc_dt::scfx_is_digit\fP (\fBchar\fP \fBc\fP, \fBsc_numrep\fP \fBnumrep\fP)"
.br
.ti -1c
.RI "int \fBsc_dt::scfx_to_digit\fP (\fBchar\fP \fBc\fP, \fBsc_numrep\fP \fBnumrep\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsc_dt::scfx_print_nan\fP (\fBscfx_string\fP &s)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsc_dt::scfx_print_inf\fP (\fBscfx_string\fP &s, \fBbool\fP negative)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsc_dt::scfx_print_prefix\fP (\fBscfx_string\fP &s, \fBsc_numrep\fP \fBnumrep\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsc_dt::scfx_print_exp\fP (\fBscfx_string\fP &s, int \fBexp\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsc_dt::scfx_tc2csd\fP (\fBscfx_string\fP &, int)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsc_dt::scfx_csd2tc\fP (\fBscfx_string\fP &)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#\fBdefine\fP LSB_STATEMENT(\fBn\fP)   \fBif\fP( \fBx\fP << \fBn\fP ) { \fBx\fP <<= \fBn\fP; \fBi\fP \-= \fBn\fP; }"

.SS "#\fBdefine\fP MSB_STATEMENT(\fBn\fP)   \fBif\fP( \fBx\fP >> \fBn\fP ) { \fBx\fP >>= \fBn\fP; \fBi\fP += \fBn\fP; }"

.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
