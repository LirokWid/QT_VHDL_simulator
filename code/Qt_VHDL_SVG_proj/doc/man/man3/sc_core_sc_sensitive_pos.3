.TH "sc_core::sc_sensitive_pos" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sc_core::sc_sensitive_pos
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <sc_sensitive\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "\fBtypedef\fP \fBsc_signal_in_if\fP< \fBbool\fP > \fBin_if_b_type\fP"
.br
.ti -1c
.RI "\fBtypedef\fP \fBsc_signal_in_if\fP< \fBsc_dt::sc_logic\fP > \fBin_if_l_type\fP"
.br
.ti -1c
.RI "\fBtypedef\fP \fBsc_in\fP< \fBbool\fP > \fBin_port_b_type\fP"
.br
.ti -1c
.RI "\fBtypedef\fP \fBsc_in\fP< \fBsc_dt::sc_logic\fP > \fBin_port_l_type\fP"
.br
.ti -1c
.RI "\fBtypedef\fP \fBsc_inout\fP< \fBbool\fP > \fBinout_port_b_type\fP"
.br
.ti -1c
.RI "\fBtypedef\fP \fBsc_inout\fP< \fBsc_dt::sc_logic\fP > \fBinout_port_l_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator<<\fP (\fBsc_process_handle\fP)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator<<\fP (\fBsc_method_handle\fP)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator<<\fP (\fBsc_thread_handle\fP)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator()\fP (\fBconst\fP \fBin_if_b_type\fP &)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator()\fP (\fBconst\fP \fBin_if_l_type\fP &)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator()\fP (\fBconst\fP \fBin_port_b_type\fP &)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator()\fP (\fBconst\fP \fBin_port_l_type\fP &)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator()\fP (\fBconst\fP \fBinout_port_b_type\fP &)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator()\fP (\fBconst\fP \fBinout_port_l_type\fP &)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator<<\fP (\fBconst\fP \fBin_if_b_type\fP &)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator<<\fP (\fBconst\fP \fBin_if_l_type\fP &)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator<<\fP (\fBconst\fP \fBin_port_b_type\fP &)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator<<\fP (\fBconst\fP \fBin_port_l_type\fP &)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator<<\fP (\fBconst\fP \fBinout_port_b_type\fP &)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator<<\fP (\fBconst\fP \fBinout_port_l_type\fP &)"
.br
.ti -1c
.RI "\fBvoid\fP \fBreset\fP ()"
.br
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "enum { \fBSC_NONE_\fP, \fBSC_METHOD_\fP, \fBSC_THREAD_\fP }"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_sensitive_pos\fP (\fBsc_module\fP *)"
.br
.ti -1c
.RI "\fB~sc_sensitive_pos\fP ()"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP ()"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP (\fBconst\fP \fBsc_sensitive_pos\fP &)"
.br
.ti -1c
.RI "\fBsc_sensitive_pos\fP & \fBoperator=\fP (\fBconst\fP \fBsc_sensitive_pos\fP &)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBsc_module\fP * \fBm_module\fP"
.br
.ti -1c
.RI "\fBenum\fP sc_core::sc_sensitive_pos:: { \&.\&.\&. }  \fBm_mode\fP"
.br
.ti -1c
.RI "\fBsc_process_b\fP * \fBm_handle\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "\fBclass\fP \fBsc_module\fP"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "\fBtypedef\fP \fBsc_signal_in_if\fP<\fBbool\fP> \fBsc_core::sc_sensitive_pos::in_if_b_type\fP"

.SS "\fBtypedef\fP \fBsc_signal_in_if\fP<\fBsc_dt::sc_logic\fP> \fBsc_core::sc_sensitive_pos::in_if_l_type\fP"

.SS "\fBtypedef\fP \fBsc_in\fP<\fBbool\fP> \fBsc_core::sc_sensitive_pos::in_port_b_type\fP"

.SS "\fBtypedef\fP \fBsc_in\fP<\fBsc_dt::sc_logic\fP> \fBsc_core::sc_sensitive_pos::in_port_l_type\fP"

.SS "\fBtypedef\fP \fBsc_inout\fP<\fBbool\fP> \fBsc_core::sc_sensitive_pos::inout_port_b_type\fP"

.SS "\fBtypedef\fP \fBsc_inout\fP<\fBsc_dt::sc_logic\fP> \fBsc_core::sc_sensitive_pos::inout_port_l_type\fP"

.SH "Member Enumeration Documentation"
.PP 
.SS "\fBanonymous\fP \fBenum\fP\fR [private]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISC_NONE_ \fP\fP
.TP
\fB\fISC_METHOD_ \fP\fP
.TP
\fB\fISC_THREAD_ \fP\fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "sc_core::sc_sensitive_pos::sc_sensitive_pos (\fBsc_module\fP *)\fR [explicit]\fP, \fR [private]\fP"

.SS "sc_core::sc_sensitive_pos::~sc_sensitive_pos ()\fR [private]\fP"

.SS "sc_core::sc_sensitive_pos::sc_sensitive_pos ()\fR [private]\fP"

.SS "sc_core::sc_sensitive_pos::sc_sensitive_pos (\fBconst\fP \fBsc_sensitive_pos\fP &)\fR [private]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator() (\fBconst\fP \fBin_if_b_type\fP &)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator() (\fBconst\fP \fBin_if_l_type\fP &)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator() (\fBconst\fP \fBin_port_b_type\fP &)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator() (\fBconst\fP \fBin_port_l_type\fP &)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator() (\fBconst\fP \fBinout_port_b_type\fP &)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator() (\fBconst\fP \fBinout_port_l_type\fP &)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator<< (\fBconst\fP \fBin_if_b_type\fP &)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator<< (\fBconst\fP \fBin_if_l_type\fP &)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator<< (\fBconst\fP \fBin_port_b_type\fP &)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator<< (\fBconst\fP \fBin_port_l_type\fP &)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator<< (\fBconst\fP \fBinout_port_b_type\fP &)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator<< (\fBconst\fP \fBinout_port_l_type\fP &)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator<< (\fBsc_method_handle\fP)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator<< (\fBsc_process_handle\fP)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator<< (\fBsc_thread_handle\fP)"

.SS "\fBsc_sensitive_pos\fP & sc_core::sc_sensitive_pos::operator= (\fBconst\fP \fBsc_sensitive_pos\fP &)\fR [private]\fP"

.SS "\fBvoid\fP sc_core::sc_sensitive_pos::reset ()"

.SH "Friends And Related Symbol Documentation"
.PP 
.SS "\fBfriend\fP \fBclass\fP \fBsc_module\fP\fR [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBsc_process_b\fP* sc_core::sc_sensitive_pos::m_handle\fR [private]\fP"

.SS "enum  { \&.\&.\&. }  sc_core::sc_sensitive_pos::m_mode\fR [private]\fP"

.SS "\fBsc_module\fP* sc_core::sc_sensitive_pos::m_module\fR [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
