.TH "sc_core::sc_time" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sc_core::sc_time
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <sc_time\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "\fBtypedef\fP \fBsc_dt::uint64\fP \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_time\fP ()"
.br
.ti -1c
.RI "\fBsc_time\fP (\fBconst\fP \fBsc_time\fP &)"
.br
.ti -1c
.RI "\fBsc_time\fP (\fBdouble\fP, \fBsc_time_unit\fP)"
.br
.ti -1c
.RI "\fBsc_time\fP (\fBdouble\fP, \fBsc_time_unit\fP, \fBsc_simcontext\fP *)"
.br
.ti -1c
.RI "\fBsc_time\fP (\fBdouble\fP, \fBconst\fP \fBchar\fP *unit)"
.br
.ti -1c
.RI "\fBsc_time\fP (\fBdouble\fP, \fBconst\fP \fBchar\fP *unit, \fBsc_simcontext\fP *)"
.br
.ti -1c
.RI "\fBsc_time\fP (\fBdouble\fP, \fBbool\fP \fBscale\fP)"
.br
.ti -1c
.RI "\fBsc_time\fP (\fBvalue_type\fP, \fBbool\fP \fBscale\fP)"
.br
.ti -1c
.RI "\fBsc_time\fP & \fBoperator=\fP (\fBconst\fP \fBsc_time\fP &)"
.br
.ti -1c
.RI "\fBvalue_type\fP \fBvalue\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBdouble\fP \fBto_double\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBdouble\fP \fBto_default_time_units\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBdouble\fP \fBto_seconds\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP std::string \fBto_string\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator==\fP (\fBconst\fP \fBsc_time\fP &) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator!=\fP (\fBconst\fP \fBsc_time\fP &) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator<\fP (\fBconst\fP \fBsc_time\fP &) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator<=\fP (\fBconst\fP \fBsc_time\fP &) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator>\fP (\fBconst\fP \fBsc_time\fP &) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator>=\fP (\fBconst\fP \fBsc_time\fP &) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_time\fP & \fBoperator+=\fP (\fBconst\fP \fBsc_time\fP &)"
.br
.ti -1c
.RI "\fBsc_time\fP & \fBoperator\-=\fP (\fBconst\fP \fBsc_time\fP &)"
.br
.ti -1c
.RI "\fBsc_time\fP & \fBoperator*=\fP (\fBdouble\fP)"
.br
.ti -1c
.RI "\fBsc_time\fP & \fBoperator/=\fP (\fBdouble\fP)"
.br
.ti -1c
.RI "\fBsc_time\fP & \fBoperator%=\fP (\fBconst\fP \fBsc_time\fP &)"
.br
.ti -1c
.RI "\fBvoid\fP \fBprint\fP (::std::ostream &\fBos\fP=std::cout) \fBconst\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "\fBstatic\fP \fBsc_time\fP \fBfrom_value\fP (\fBvalue_type\fP)"
.br
.ti -1c
.RI "\fBstatic\fP \fBsc_time\fP \fBfrom_seconds\fP (\fBdouble\fP)"
.br
.ti -1c
.RI "\fBstatic\fP \fBsc_time\fP \fBfrom_string\fP (\fBconst\fP \fBchar\fP *\fBstr\fP)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBvalue_type\fP \fBm_value\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "\fBconst\fP \fBsc_time\fP \fBoperator+\fP (\fBconst\fP \fBsc_time\fP &, \fBconst\fP \fBsc_time\fP &)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_time\fP \fBoperator\-\fP (\fBconst\fP \fBsc_time\fP &, \fBconst\fP \fBsc_time\fP &)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_time\fP \fBoperator*\fP (\fBconst\fP \fBsc_time\fP &, \fBdouble\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_time\fP \fBoperator*\fP (\fBdouble\fP, \fBconst\fP \fBsc_time\fP &)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_time\fP \fBoperator/\fP (\fBconst\fP \fBsc_time\fP &, \fBdouble\fP)"
.br
.ti -1c
.RI "\fBdouble\fP \fBoperator/\fP (\fBconst\fP \fBsc_time\fP &, \fBconst\fP \fBsc_time\fP &)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_time\fP \fBoperator%\fP (\fBconst\fP \fBsc_time\fP &, \fBconst\fP \fBsc_time\fP &)"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "\fBtypedef\fP \fBsc_dt::uint64\fP \fBsc_core::sc_time::value_type\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "sc_core::sc_time::sc_time ()\fR [inline]\fP"

.SS "sc_core::sc_time::sc_time (\fBconst\fP \fBsc_time\fP & t)\fR [inline]\fP"

.SS "sc_core::sc_time::sc_time (\fBdouble\fP, \fBsc_time_unit\fP)"

.SS "sc_core::sc_time::sc_time (\fBdouble\fP, \fBsc_time_unit\fP, \fBsc_simcontext\fP *)"

.SS "sc_core::sc_time::sc_time (\fBdouble\fP, \fBconst\fP \fBchar\fP * unit)"

.SS "sc_core::sc_time::sc_time (\fBdouble\fP, \fBconst\fP \fBchar\fP * unit, \fBsc_simcontext\fP *)"

.SS "sc_core::sc_time::sc_time (\fBdouble\fP, \fBbool\fP scale)"

.SS "sc_core::sc_time::sc_time (\fBvalue_type\fP, \fBbool\fP scale)"

.SH "Member Function Documentation"
.PP 
.SS "\fBsc_time\fP sc_core::sc_time::from_seconds (\fBdouble\fP v)\fR [inline]\fP, \fR [static]\fP"

.SS "\fBstatic\fP \fBsc_time\fP sc_core::sc_time::from_string (\fBconst\fP \fBchar\fP * str)\fR [static]\fP"

.SS "\fBstatic\fP \fBsc_time\fP sc_core::sc_time::from_value (\fBvalue_type\fP)\fR [static]\fP"

.SS "\fBbool\fP sc_core::sc_time::operator!= (\fBconst\fP \fBsc_time\fP & t) const\fR [inline]\fP"

.SS "\fBsc_time\fP & sc_core::sc_time::operator%= (\fBconst\fP \fBsc_time\fP & t)\fR [inline]\fP"

.SS "\fBsc_time\fP & sc_core::sc_time::operator*= (\fBdouble\fP d)\fR [inline]\fP"

.SS "\fBsc_time\fP & sc_core::sc_time::operator+= (\fBconst\fP \fBsc_time\fP & t)\fR [inline]\fP"

.SS "\fBsc_time\fP & sc_core::sc_time::operator\-= (\fBconst\fP \fBsc_time\fP & t)\fR [inline]\fP"

.SS "\fBsc_time\fP & sc_core::sc_time::operator/= (\fBdouble\fP d)\fR [inline]\fP"

.SS "\fBbool\fP sc_core::sc_time::operator< (\fBconst\fP \fBsc_time\fP & t) const\fR [inline]\fP"

.SS "\fBbool\fP sc_core::sc_time::operator<= (\fBconst\fP \fBsc_time\fP & t) const\fR [inline]\fP"

.SS "\fBsc_time\fP & sc_core::sc_time::operator= (\fBconst\fP \fBsc_time\fP & t)\fR [inline]\fP"

.SS "\fBbool\fP sc_core::sc_time::operator== (\fBconst\fP \fBsc_time\fP & t) const\fR [inline]\fP"

.SS "\fBbool\fP sc_core::sc_time::operator> (\fBconst\fP \fBsc_time\fP & t) const\fR [inline]\fP"

.SS "\fBbool\fP sc_core::sc_time::operator>= (\fBconst\fP \fBsc_time\fP & t) const\fR [inline]\fP"

.SS "\fBvoid\fP sc_core::sc_time::print (::std::ostream & os = \fRstd::cout\fP) const"

.SS "\fBdouble\fP sc_core::sc_time::to_default_time_units () const"

.SS "\fBdouble\fP sc_core::sc_time::to_double () const\fR [inline]\fP"

.SS "\fBdouble\fP sc_core::sc_time::to_seconds () const"

.SS "\fBconst\fP std::string sc_core::sc_time::to_string () const\fR [inline]\fP"

.SS "\fBsc_time::value_type\fP sc_core::sc_time::value () const\fR [inline]\fP"

.SH "Friends And Related Symbol Documentation"
.PP 
.SS "\fBconst\fP \fBsc_time\fP \fBoperator\fP% (\fBconst\fP \fBsc_time\fP & t1, \fBconst\fP \fBsc_time\fP & t2)\fR [friend]\fP"

.SS "\fBconst\fP \fBsc_time\fP \fBoperator\fP* (\fBconst\fP \fBsc_time\fP & t, \fBdouble\fP d)\fR [friend]\fP"

.SS "\fBconst\fP \fBsc_time\fP \fBoperator\fP* (\fBdouble\fP d, \fBconst\fP \fBsc_time\fP & t)\fR [friend]\fP"

.SS "\fBconst\fP \fBsc_time\fP \fBoperator\fP+ (\fBconst\fP \fBsc_time\fP & t1, \fBconst\fP \fBsc_time\fP & t2)\fR [friend]\fP"

.SS "\fBconst\fP \fBsc_time\fP \fBoperator\fP\- (\fBconst\fP \fBsc_time\fP & t1, \fBconst\fP \fBsc_time\fP & t2)\fR [friend]\fP"

.SS "\fBdouble\fP \fBoperator\fP/ (\fBconst\fP \fBsc_time\fP & t1, \fBconst\fP \fBsc_time\fP & t2)\fR [friend]\fP"

.SS "\fBconst\fP \fBsc_time\fP \fBoperator\fP/ (\fBconst\fP \fBsc_time\fP & t, \fBdouble\fP d)\fR [friend]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBvalue_type\fP sc_core::sc_time::m_value\fR [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
