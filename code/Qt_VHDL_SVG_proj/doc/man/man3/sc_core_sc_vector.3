.TH "sc_core::sc_vector< T >" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sc_core::sc_vector< T >
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <sc_vector\&.h>\fP
.PP
Inherits \fBsc_core::sc_vector_base\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "\fBtypedef\fP \fBT\fP \fBelement_type\fP"
.br
.ti -1c
.RI "\fBtypedef\fP \fBsc_vector_iter\fP< \fBelement_type\fP > \fBiterator\fP"
.br
.ti -1c
.RI "\fBtypedef\fP \fBsc_vector_iter\fP< \fBconst\fP \fBelement_type\fP > \fBconst_iterator\fP"
.br
.in -1c

Public Types inherited from \fBsc_core::sc_vector_base\fP
.in +1c
.ti -1c
.RI "\fBtypedef\fP \fBsc_vector_element\fP * \fBhandle_type\fP"
.br
.ti -1c
.RI "\fBtypedef\fP std::vector< \fBhandle_type\fP > \fBstorage_type\fP"
.br
.ti -1c
.RI "\fBtypedef\fP storage_type::size_type \fBsize_type\fP"
.br
.ti -1c
.RI "\fBtypedef\fP storage_type::difference_type \fBdifference_type\fP"
.br
.in -1c

Public Types inherited from \fBsc_core::sc_object\fP
.in +1c
.ti -1c
.RI "\fBtypedef\fP \fBunsigned\fP \fBphase_cb_mask\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_vector\fP ()"
.br
.ti -1c
.RI "\fBsc_vector\fP (\fBconst\fP \fBchar\fP *\fBprefix\fP)"
.br
.ti -1c
.RI "\fBsc_vector\fP (\fBconst\fP \fBchar\fP *\fBprefix\fP, \fBsize_type\fP \fBn\fP)"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBCreator\fP > \fBsc_vector\fP (\fBconst\fP \fBchar\fP *\fBprefix\fP, \fBsize_type\fP \fBn\fP, \fBCreator\fP \fBcreator\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fB~sc_vector\fP ()"
.br
.ti -1c
.RI "\fBelement_type\fP & \fBoperator[]\fP (\fBsize_type\fP \fBi\fP)"
.br
.ti -1c
.RI "\fBelement_type\fP & \fBat\fP (\fBsize_type\fP \fBi\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBelement_type\fP & \fBoperator[]\fP (\fBsize_type\fP \fBi\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBelement_type\fP & \fBat\fP (\fBsize_type\fP \fBi\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBinit\fP (\fBsize_type\fP \fBn\fP)"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBCreator\fP > \fBvoid\fP \fBinit\fP (\fBsize_type\fP \fBn\fP, \fBCreator\fP \fBc\fP)"
.br
.ti -1c
.RI "\fBiterator\fP \fBbegin\fP ()"
.br
.ti -1c
.RI "\fBiterator\fP \fBend\fP ()"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBbegin\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBend\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBcbegin\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBcend\fP () \fBconst\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBContainerType\fP , \fBtypename\fP \fBArgumentType\fP > \fBiterator\fP \fBbind\fP (\fBsc_vector_assembly\fP< \fBContainerType\fP, \fBArgumentType\fP > \fBc\fP)"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBBindableContainer\fP > \fBiterator\fP \fBbind\fP (\fBBindableContainer\fP &\fBc\fP)"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBBindableIterator\fP > \fBiterator\fP \fBbind\fP (\fBBindableIterator\fP first, \fBBindableIterator\fP last)"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBBindableIterator\fP > \fBiterator\fP \fBbind\fP (\fBBindableIterator\fP first, \fBBindableIterator\fP last, \fBiterator\fP \fBfrom\fP)"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBContainerType\fP , \fBtypename\fP \fBArgumentType\fP > \fBiterator\fP \fBoperator()\fP (\fBsc_vector_assembly\fP< \fBContainerType\fP, \fBArgumentType\fP > \fBc\fP)"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBArgumentContainer\fP > \fBiterator\fP \fBoperator()\fP (\fBArgumentContainer\fP &\fBc\fP)"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBArgumentIterator\fP > \fBiterator\fP \fBoperator()\fP (\fBArgumentIterator\fP first, \fBArgumentIterator\fP last)"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBArgumentIterator\fP > \fBiterator\fP \fBoperator()\fP (\fBArgumentIterator\fP first, \fBArgumentIterator\fP last, \fBiterator\fP \fBfrom\fP)"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBMT\fP > \fBsc_vector_assembly\fP< \fBT\fP, \fBMT\fP > \fBassemble\fP (\fBMT\fP(T::*\fBmember_ptr\fP))"
.br
.in -1c

Public Member Functions inherited from \fBsc_core::sc_vector_base\fP
.in +1c
.ti -1c
.RI "\fBconst\fP \fBchar\fP * \fBkind\fP () \fBconst\fP"
.br
.ti -1c
.RI "std::vector< \fBsc_object\fP * > \fBconst\fP & \fBget_elements\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsize_type\fP \fBsize\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBreport_empty_bind\fP (\fBconst\fP \fBchar\fP *\fBkind_\fP, \fBbool\fP \fBdst_range_\fP) \fBconst\fP"
.br
.in -1c

Public Member Functions inherited from \fBsc_core::sc_object\fP
.in +1c
.ti -1c
.RI "\fBconst\fP \fBchar\fP * \fBname\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBchar\fP * \fBbasename\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBprint\fP (::std::ostream &\fBos\fP=::std::cout) \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBdump\fP (::std::ostream &\fBos\fP=::std::cout) \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBtrace\fP (\fBsc_trace_file\fP *tf) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_simcontext\fP * \fBsimcontext\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBadd_attribute\fP (\fBsc_attr_base\fP &)"
.br
.ti -1c
.RI "\fBsc_attr_base\fP * \fBget_attribute\fP (\fBconst\fP std::string &\fBname_\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_attr_base\fP * \fBget_attribute\fP (\fBconst\fP std::string &\fBname_\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_attr_base\fP * \fBremove_attribute\fP (\fBconst\fP std::string &\fBname_\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBremove_all_attributes\fP ()"
.br
.ti -1c
.RI "int \fBnum_attributes\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_attr_cltn\fP & \fBattr_cltn\fP ()"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_attr_cltn\fP & \fBattr_cltn\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP std::vector< \fBsc_event\fP * > & \fBget_child_events\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP std::vector< \fBsc_object\fP * > & \fBget_child_objects\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBget_parent\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBget_parent_object\fP () \fBconst\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "\fBstatic\fP \fBelement_type\fP * \fBcreate_element\fP (\fBconst\fP \fBchar\fP *\fBprefix\fP, \fBsize_type\fP index)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBclear\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBsc_object\fP * \fBobject_cast\fP (\fBvoid\fP *p) \fBconst\fP"
.br
.in -1c

Protected Member Functions inherited from \fBsc_core::sc_vector_base\fP
.in +1c
.ti -1c
.RI "\fBsc_vector_base\fP ()"
.br
.ti -1c
.RI "\fBsc_vector_base\fP (\fBconst\fP \fBchar\fP *\fBprefix\fP)"
.br
.ti -1c
.RI "\fB~sc_vector_base\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP * \fBat\fP (\fBsize_type\fP \fBi\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBconst\fP * \fBat\fP (\fBsize_type\fP \fBi\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBreserve\fP (\fBsize_type\fP \fBn\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBclear\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBpush_back\fP (\fBvoid\fP *item)"
.br
.ti -1c
.RI "\fBvoid\fP \fBcheck_index\fP (\fBsize_type\fP \fBi\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBcheck_init\fP (\fBsize_type\fP \fBn\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBiterator\fP \fBbegin\fP ()"
.br
.ti -1c
.RI "\fBiterator\fP \fBend\fP ()"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBbegin\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBend\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBimplicit_cast\fP (\fBsc_object\fP *p) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBimplicit_cast\fP (\&.\&.\&.) \fBconst\fP"
.br
.in -1c

Protected Member Functions inherited from \fBsc_core::sc_object\fP
.in +1c
.ti -1c
.RI "\fBsc_object\fP ()"
.br
.ti -1c
.RI "\fBsc_object\fP (\fBconst\fP \fBchar\fP *\fBnm\fP)"
.br
.ti -1c
.RI "\fBsc_object\fP (\fBconst\fP \fBsc_object\fP &)"
.br
.ti -1c
.RI "\fBsc_object\fP & \fBoperator=\fP (\fBconst\fP \fBsc_object\fP &)"
.br
.ti -1c
.RI "\fBvirtual\fP \fB~sc_object\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBadd_child_event\fP (\fBsc_event\fP *\fBevent_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBadd_child_object\fP (\fBsc_object\fP *\fBobject_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBbool\fP \fBremove_child_event\fP (\fBsc_event\fP *\fBevent_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBbool\fP \fBremove_child_object\fP (\fBsc_object\fP *\fBobject_p\fP)"
.br
.ti -1c
.RI "\fBphase_cb_mask\fP \fBregister_simulation_phase_callback\fP (\fBphase_cb_mask\fP)"
.br
.ti -1c
.RI "\fBphase_cb_mask\fP \fBunregister_simulation_phase_callback\fP (\fBphase_cb_mask\fP)"
.br
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "\fBtypedef\fP \fBsc_vector_base\fP \fBbase_type\fP"
.br
.ti -1c
.RI "\fBtypedef\fP \fBsc_vector\fP< \fBT\fP > \fBthis_type\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Protected Types inherited from \fBsc_core::sc_vector_base\fP
.in +1c
.ti -1c
.RI "\fBtypedef\fP storage_type::iterator \fBiterator\fP"
.br
.ti -1c
.RI "\fBtypedef\fP storage_type::const_iterator \fBconst_iterator\fP"
.br
.in -1c

Static Protected Member Functions inherited from \fBsc_core::sc_vector_base\fP
.in +1c
.ti -1c
.RI "\fBstatic\fP std::string \fBmake_name\fP (\fBconst\fP \fBchar\fP *\fBprefix\fP, \fBsize_type\fP index)"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<\fBtypename\fP \fBT\fP > \fBtypedef\fP \fBsc_vector_base\fP \fBsc_core::sc_vector\fP< \fBT\fP >::base_type\fR [private]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBtypedef\fP \fBsc_vector_iter\fP< \fBconst\fP \fBelement_type\fP > \fBsc_core::sc_vector\fP< \fBT\fP >::const_iterator"

.SS "template<\fBtypename\fP \fBT\fP > \fBtypedef\fP \fBT\fP \fBsc_core::sc_vector\fP< \fBT\fP >::element_type"

.SS "template<\fBtypename\fP \fBT\fP > \fBtypedef\fP \fBsc_vector_iter\fP< \fBelement_type\fP > \fBsc_core::sc_vector\fP< \fBT\fP >::iterator"

.SS "template<\fBtypename\fP \fBT\fP > \fBtypedef\fP \fBsc_vector\fP<\fBT\fP> \fBsc_core::sc_vector\fP< \fBT\fP >::this_type\fR [private]\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<\fBtypename\fP \fBT\fP > \fBsc_core::sc_vector\fP< \fBT\fP >::sc_vector ()\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBsc_core::sc_vector\fP< \fBT\fP >::sc_vector (\fBconst\fP \fBchar\fP * prefix)\fR [inline]\fP, \fR [explicit]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBsc_core::sc_vector\fP< \fBT\fP >::sc_vector (\fBconst\fP \fBchar\fP * prefix, \fBsize_type\fP n)\fR [inline]\fP, \fR [explicit]\fP"

.SS "template<\fBtypename\fP \fBT\fP > template<\fBtypename\fP \fBCreator\fP > \fBsc_core::sc_vector\fP< \fBT\fP >::sc_vector (\fBconst\fP \fBchar\fP * prefix, \fBsize_type\fP n, \fBCreator\fP creator)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBsc_core::sc_vector\fP< \fBT\fP >::~\fBsc_vector\fP ()\fR [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<\fBtypename\fP \fBT\fP > template<\fBtypename\fP \fBMT\fP > \fBsc_vector_assembly\fP< \fBT\fP, \fBMT\fP > \fBsc_core::sc_vector\fP< \fBT\fP >::assemble (\fBMT\fP T::* member_ptr)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBelement_type\fP & \fBsc_core::sc_vector\fP< \fBT\fP >::at (\fBsize_type\fP i)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBconst\fP \fBelement_type\fP & \fBsc_core::sc_vector\fP< \fBT\fP >::at (\fBsize_type\fP i) const\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBiterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >::begin ()\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBconst_iterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >::begin () const\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > template<\fBtypename\fP \fBBindableContainer\fP > \fBiterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >::bind (\fBBindableContainer\fP & c)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > template<\fBtypename\fP \fBBindableIterator\fP > \fBiterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >::bind (\fBBindableIterator\fP first, \fBBindableIterator\fP last)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > template<\fBtypename\fP \fBBindableIterator\fP > \fBiterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >::bind (\fBBindableIterator\fP first, \fBBindableIterator\fP last, \fBiterator\fP from)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > template<\fBtypename\fP \fBContainerType\fP , \fBtypename\fP \fBArgumentType\fP > \fBiterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >::bind (\fBsc_vector_assembly\fP< \fBContainerType\fP, \fBArgumentType\fP > c)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBconst_iterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >::cbegin () const\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBconst_iterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >::cend () const\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBvoid\fP \fBsc_core::sc_vector\fP< \fBT\fP >::clear ()\fR [protected]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBsc_vector\fP< \fBT\fP >\fB::element_type\fP * \fBsc_core::sc_vector\fP< \fBT\fP >::create_element (\fBconst\fP \fBchar\fP * prefix, \fBsize_type\fP index)\fR [static]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBiterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >::end ()\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBconst_iterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >::end () const\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBvoid\fP \fBsc_core::sc_vector\fP< \fBT\fP >::init (\fBsize_type\fP n)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > template<\fBtypename\fP \fBCreator\fP > \fBvoid\fP \fBsc_core::sc_vector\fP< \fBT\fP >::init (\fBsize_type\fP n, \fBCreator\fP c)"

.SS "template<\fBtypename\fP \fBT\fP > \fBvirtual\fP \fBsc_object\fP * \fBsc_core::sc_vector\fP< \fBT\fP >::object_cast (\fBvoid\fP * p) const\fR [inline]\fP, \fR [protected]\fP, \fR [virtual]\fP"

.PP
Implements \fBsc_core::sc_vector_base\fP\&.
.SS "template<\fBtypename\fP \fBT\fP > template<\fBtypename\fP \fBArgumentContainer\fP > \fBiterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >\fB::operator\fP() (\fBArgumentContainer\fP & c)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > template<\fBtypename\fP \fBArgumentIterator\fP > \fBiterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >\fB::operator\fP() (\fBArgumentIterator\fP first, \fBArgumentIterator\fP last)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > template<\fBtypename\fP \fBArgumentIterator\fP > \fBiterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >\fB::operator\fP() (\fBArgumentIterator\fP first, \fBArgumentIterator\fP last, \fBiterator\fP from)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > template<\fBtypename\fP \fBContainerType\fP , \fBtypename\fP \fBArgumentType\fP > \fBiterator\fP \fBsc_core::sc_vector\fP< \fBT\fP >\fB::operator\fP() (\fBsc_vector_assembly\fP< \fBContainerType\fP, \fBArgumentType\fP > c)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBelement_type\fP & \fBsc_core::sc_vector\fP< \fBT\fP >\fB::operator\fP[] (\fBsize_type\fP i)\fR [inline]\fP"

.SS "template<\fBtypename\fP \fBT\fP > \fBconst\fP \fBelement_type\fP & \fBsc_core::sc_vector\fP< \fBT\fP >\fB::operator\fP[] (\fBsize_type\fP i) const\fR [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
