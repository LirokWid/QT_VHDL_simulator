.TH "sc_boost::_bi" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sc_boost::_bi
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBadd_value\fP"
.br
.ti -1c
.RI "struct \fBadd_value< arg< I > >\fP"
.br
.ti -1c
.RI "struct \fBadd_value< arg< I >(*)() >\fP"
.br
.ti -1c
.RI "struct \fBadd_value< bind_t< R, F, L > >\fP"
.br
.ti -1c
.RI "struct \fBadd_value< reference_wrapper< T > >\fP"
.br
.ti -1c
.RI "struct \fBadd_value< value< T > >\fP"
.br
.ti -1c
.RI "class \fBaf0\fP"
.br
.ti -1c
.RI "class \fBaf1\fP"
.br
.ti -1c
.RI "class \fBaf2\fP"
.br
.ti -1c
.RI "class \fBaf3\fP"
.br
.ti -1c
.RI "class \fBaf4\fP"
.br
.ti -1c
.RI "class \fBbind_t\fP"
.br
.ti -1c
.RI "class \fBlist0\fP"
.br
.ti -1c
.RI "class \fBlist1\fP"
.br
.ti -1c
.RI "class \fBlist2\fP"
.br
.ti -1c
.RI "class \fBlist3\fP"
.br
.ti -1c
.RI "class \fBlist4\fP"
.br
.ti -1c
.RI "class \fBlist5\fP"
.br
.ti -1c
.RI "class \fBlist6\fP"
.br
.ti -1c
.RI "class \fBlist7\fP"
.br
.ti -1c
.RI "class \fBlist8\fP"
.br
.ti -1c
.RI "class \fBlist9\fP"
.br
.ti -1c
.RI "struct \fBlist_av_1\fP"
.br
.ti -1c
.RI "struct \fBlist_av_2\fP"
.br
.ti -1c
.RI "struct \fBlist_av_3\fP"
.br
.ti -1c
.RI "struct \fBlist_av_4\fP"
.br
.ti -1c
.RI "struct \fBlist_av_5\fP"
.br
.ti -1c
.RI "struct \fBlist_av_6\fP"
.br
.ti -1c
.RI "struct \fBlist_av_7\fP"
.br
.ti -1c
.RI "struct \fBlist_av_8\fP"
.br
.ti -1c
.RI "struct \fBlist_av_9\fP"
.br
.ti -1c
.RI "struct \fBlogical_not\fP"
.br
.ti -1c
.RI "class \fBprotected_bind_t\fP"
.br
.ti -1c
.RI "struct \fBresult_traits\fP"
.br
.ti -1c
.RI "struct \fBresult_traits< unspecified, F >\fP"
.br
.ti -1c
.RI "struct \fBresult_traits< unspecified, reference_wrapper< F > >\fP"
.br
.ti -1c
.RI "class \fBtype\fP"
.br
.ti -1c
.RI "struct \fBunspecified\fP"
.br
.ti -1c
.RI "class \fBvalue\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<\fBclass\fP \fBT\fP > \fBbool\fP \fBref_compare\fP (\fBT\fP \fBconst\fP &\fBa\fP, \fBT\fP \fBconst\fP &b, \fBlong\fP)"
.br
.ti -1c
.RI "template<\fBclass\fP \fBT\fP > \fBbool\fP \fBref_compare\fP (\fBreference_wrapper\fP< \fBT\fP > \fBconst\fP &\fBa\fP, \fBreference_wrapper\fP< \fBT\fP > \fBconst\fP &b, int)"
.br
.ti -1c
.RI "template<\fBclass\fP F > F & \fBunwrap\fP (F *f, \fBlong\fP)"
.br
.ti -1c
.RI "template<\fBclass\fP F > F & \fBunwrap\fP (\fBreference_wrapper\fP< F > *f, int)"
.br
.ti -1c
.RI "template<\fBclass\fP F > F & \fBunwrap\fP (\fBreference_wrapper\fP< F > \fBconst\fP *f, int)"
.br
.ti -1c
.RI "template<\fBclass\fP \fBR\fP , \fBclass\fP \fBT\fP > \fB_mfi::dm\fP< \fBR\fP, \fBT\fP > \fBunwrap\fP (\fBR\fP T::**\fBpm\fP, int)"
.br
.ti -1c
.RI "template<\fBclass\fP \fBR\fP , \fBclass\fP \fBT\fP > \fB_mfi::dm\fP< \fBR\fP, \fBT\fP > \fBunwrap\fP (\fBR\fP T::*\fBconst\fP *\fBpm\fP, int)"
.br
.ti -1c
.RI "template<\fBclass\fP \fBR\fP , \fBclass\fP F , \fBclass\fP \fBL\fP > \fBbool\fP \fBfunction_equal\fP (\fBbind_t\fP< \fBR\fP, F, \fBL\fP > \fBconst\fP &\fBa\fP, \fBbind_t\fP< \fBR\fP, F, \fBL\fP > \fBconst\fP &b)"
.br
.ti -1c
.RI "template<\fBclass\fP \fBR\fP , \fBclass\fP F , \fBclass\fP \fBL\fP > \fBbind_t\fP< \fBbool\fP, \fBlogical_not\fP, \fBlist1\fP< \fBbind_t\fP< \fBR\fP, F, \fBL\fP > > > \fBoperator!\fP (\fBbind_t\fP< \fBR\fP, F, \fBL\fP > \fBconst\fP &f)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "template<\fBclass\fP \fBR\fP , \fBclass\fP F , \fBclass\fP \fBL\fP > \fBbool\fP sc_boost::_bi::function_equal (\fBbind_t\fP< \fBR\fP, F, \fBL\fP > \fBconst\fP & a, \fBbind_t\fP< \fBR\fP, F, \fBL\fP > \fBconst\fP & b)"

.SS "template<\fBclass\fP \fBR\fP , \fBclass\fP F , \fBclass\fP \fBL\fP > \fBbind_t\fP< \fBbool\fP, \fBlogical_not\fP, \fBlist1\fP< \fBbind_t\fP< \fBR\fP, F, \fBL\fP > > > sc_boost::_bi::operator! (\fBbind_t\fP< \fBR\fP, F, \fBL\fP > \fBconst\fP & f)"

.SS "template<\fBclass\fP \fBT\fP > \fBbool\fP sc_boost::_bi::ref_compare (\fBreference_wrapper\fP< \fBT\fP > \fBconst\fP & a, \fBreference_wrapper\fP< \fBT\fP > \fBconst\fP & b, int)"

.SS "template<\fBclass\fP \fBT\fP > \fBbool\fP sc_boost::_bi::ref_compare (\fBT\fP \fBconst\fP & a, \fBT\fP \fBconst\fP & b, \fBlong\fP)"

.SS "template<\fBclass\fP F > F & sc_boost::_bi::unwrap (F * f, \fBlong\fP)\fR [inline]\fP"

.SS "template<\fBclass\fP \fBR\fP , \fBclass\fP \fBT\fP > \fB_mfi::dm\fP< \fBR\fP, \fBT\fP > sc_boost::_bi::unwrap (\fBR\fP T::** pm, int)\fR [inline]\fP"

.SS "template<\fBclass\fP \fBR\fP , \fBclass\fP \fBT\fP > \fB_mfi::dm\fP< \fBR\fP, \fBT\fP > sc_boost::_bi::unwrap (\fBR\fP T::*\fBconst\fP * pm, int)\fR [inline]\fP"

.SS "template<\fBclass\fP F > F & sc_boost::_bi::unwrap (\fBreference_wrapper\fP< F > * f, int)\fR [inline]\fP"

.SS "template<\fBclass\fP F > F & sc_boost::_bi::unwrap (\fBreference_wrapper\fP< F > \fBconst\fP * f, int)\fR [inline]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
