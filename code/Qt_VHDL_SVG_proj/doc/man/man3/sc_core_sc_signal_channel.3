.TH "sc_core::sc_signal_channel" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sc_core::sc_signal_channel
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <sc_signal\&.h>\fP
.PP
Inherits \fBsc_core::sc_prim_channel\fP\&.
.PP
Inherited by \fBsc_core::sc_signal_t< sc_dt::sc_lv, POL >\fP, \fBsc_core::sc_signal_t< bool, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_logic, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv< W >, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv< 32 >, POL >\fP, and \fBsc_core::sc_signal_t< T, POL >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBvirtual\fP \fB~sc_signal_channel\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP \fBchar\fP * \fBkind\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_event\fP & \fBdefault_event\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_event\fP & \fBvalue_changed_event\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBevent\fP () \fBconst\fP"
.br
.in -1c

Public Member Functions inherited from \fBsc_core::sc_prim_channel\fP
.in +1c
.ti -1c
.RI "\fBbool\fP \fBupdate_requested\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBrequest_update\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBasync_request_update\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBsc_core::sc_object\fP
.in +1c
.ti -1c
.RI "\fBconst\fP \fBchar\fP * \fBname\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBchar\fP * \fBbasename\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBprint\fP (::std::ostream &\fBos\fP=::std::cout) \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBdump\fP (::std::ostream &\fBos\fP=::std::cout) \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBtrace\fP (\fBsc_trace_file\fP *tf) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_simcontext\fP * \fBsimcontext\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBadd_attribute\fP (\fBsc_attr_base\fP &)"
.br
.ti -1c
.RI "\fBsc_attr_base\fP * \fBget_attribute\fP (\fBconst\fP std::string &\fBname_\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_attr_base\fP * \fBget_attribute\fP (\fBconst\fP std::string &\fBname_\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_attr_base\fP * \fBremove_attribute\fP (\fBconst\fP std::string &\fBname_\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBremove_all_attributes\fP ()"
.br
.ti -1c
.RI "int \fBnum_attributes\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_attr_cltn\fP & \fBattr_cltn\fP ()"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_attr_cltn\fP & \fBattr_cltn\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP std::vector< \fBsc_event\fP * > & \fBget_child_events\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP std::vector< \fBsc_object\fP * > & \fBget_child_objects\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBget_parent\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBget_parent_object\fP () \fBconst\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_signal_channel\fP (\fBconst\fP \fBchar\fP *\fBname_\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBdo_update\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBdeprecated_get_data_ref\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBdeprecated_get_new_value\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBdeprecated_trace\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_event\fP * \fBlazy_kernel_event\fP (\fBsc_event\fP **, \fBconst\fP \fBchar\fP *) \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBnotify_next_delta\fP (\fBsc_event\fP *\fBev\fP) \fBconst\fP"
.br
.in -1c

Protected Member Functions inherited from \fBsc_core::sc_prim_channel\fP
.in +1c
.ti -1c
.RI "\fBsc_prim_channel\fP ()"
.br
.ti -1c
.RI "\fBsc_prim_channel\fP (\fBconst\fP \fBchar\fP *)"
.br
.ti -1c
.RI "\fBvirtual\fP \fB~sc_prim_channel\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBupdate\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBbefore_end_of_elaboration\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBend_of_elaboration\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBstart_of_simulation\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBend_of_simulation\fP ()"
.br
.ti -1c
.RI "\fBbool\fP \fBasync_attach_suspending\fP ()"
.br
.ti -1c
.RI "\fBbool\fP \fBasync_detach_suspending\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_event\fP &\fBe\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_event_or_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_event_and_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_time\fP &t)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_time\fP &t, \fBconst\fP \fBsc_event\fP &\fBe\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP, \fBconst\fP \fBsc_event\fP &\fBe\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_time\fP &t, \fBconst\fP \fBsc_event_or_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP, \fBconst\fP \fBsc_event_or_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_time\fP &t, \fBconst\fP \fBsc_event_and_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP, \fBconst\fP \fBsc_event_and_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (int \fBn\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_event\fP &\fBe\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_event_or_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_event_and_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_time\fP &t)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_time\fP &t, \fBconst\fP \fBsc_event\fP &\fBe\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP, \fBconst\fP \fBsc_event\fP &\fBe\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_time\fP &t, \fBconst\fP \fBsc_event_or_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP, \fBconst\fP \fBsc_event_or_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_time\fP &t, \fBconst\fP \fBsc_event_and_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP, \fBconst\fP \fBsc_event_and_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBtimed_out\fP ()"
.br
.in -1c

Protected Member Functions inherited from \fBsc_core::sc_object\fP
.in +1c
.ti -1c
.RI "\fBsc_object\fP ()"
.br
.ti -1c
.RI "\fBsc_object\fP (\fBconst\fP \fBchar\fP *\fBnm\fP)"
.br
.ti -1c
.RI "\fBsc_object\fP (\fBconst\fP \fBsc_object\fP &)"
.br
.ti -1c
.RI "\fBsc_object\fP & \fBoperator=\fP (\fBconst\fP \fBsc_object\fP &)"
.br
.ti -1c
.RI "\fBvirtual\fP \fB~sc_object\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBadd_child_event\fP (\fBsc_event\fP *\fBevent_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBadd_child_object\fP (\fBsc_object\fP *\fBobject_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBbool\fP \fBremove_child_event\fP (\fBsc_event\fP *\fBevent_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBbool\fP \fBremove_child_object\fP (\fBsc_object\fP *\fBobject_p\fP)"
.br
.ti -1c
.RI "\fBphase_cb_mask\fP \fBregister_simulation_phase_callback\fP (\fBphase_cb_mask\fP)"
.br
.ti -1c
.RI "\fBphase_cb_mask\fP \fBunregister_simulation_phase_callback\fP (\fBphase_cb_mask\fP)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBsc_event\fP * \fBm_change_event_p\fP"
.br
.ti -1c
.RI "\fBsc_dt::uint64\fP \fBm_change_stamp\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_signal_channel\fP (\fBconst\fP \fBsc_signal_channel\fP &)"
.br
.ti -1c
.RI "\fBsc_signal_channel\fP & \fBoperator=\fP (\fBconst\fP \fBsc_signal_channel\fP &)"
.br
.in -1c
.SS "Additional Inherited Members"


Public Types inherited from \fBsc_core::sc_prim_channel\fP
.in +1c
.ti -1c
.RI "enum { \fBlist_end\fP = 0xdb }"
.br
.in -1c

Public Types inherited from \fBsc_core::sc_object\fP
.in +1c
.ti -1c
.RI "\fBtypedef\fP \fBunsigned\fP \fBphase_cb_mask\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "sc_core::sc_signal_channel::sc_signal_channel (\fBconst\fP \fBchar\fP * name_)\fR [inline]\fP, \fR [protected]\fP"

.SS "\fBvirtual\fP sc_core::sc_signal_channel::~sc_signal_channel ()\fR [virtual]\fP"

.SS "sc_core::sc_signal_channel::sc_signal_channel (\fBconst\fP \fBsc_signal_channel\fP &)\fR [private]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBconst\fP \fBsc_event\fP & sc_core::sc_signal_channel::default_event () const\fR [inline]\fP"

.SS "\fBvoid\fP sc_core::sc_signal_channel::deprecated_get_data_ref () const\fR [protected]\fP"

.SS "\fBvoid\fP sc_core::sc_signal_channel::deprecated_get_new_value () const\fR [protected]\fP"

.SS "\fBvoid\fP sc_core::sc_signal_channel::deprecated_trace () const\fR [protected]\fP"

.SS "\fBvoid\fP sc_core::sc_signal_channel::do_update ()\fR [protected]\fP"

.SS "\fBbool\fP sc_core::sc_signal_channel::event () const\fR [inline]\fP"

.SS "\fBvirtual\fP \fBconst\fP \fBchar\fP * sc_core::sc_signal_channel::kind () const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Reimplemented from \fBsc_core::sc_prim_channel\fP\&.
.PP
Reimplemented in \fBsc_core::sc_buffer< T, POL >\fP, \fBsc_core::sc_clock\fP, \fBsc_core::sc_signal_t< T, POL >\fP, \fBsc_core::sc_signal_t< bool, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_logic, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv< 32 >, POL >\fP, \fBsc_core::sc_signal_t< sc_dt::sc_lv< W >, POL >\fP, \fBsc_core::sc_signal_resolved\fP, and \fBsc_core::sc_signal_rv< W >\fP\&.
.SS "\fBsc_event\fP * sc_core::sc_signal_channel::lazy_kernel_event (\fBsc_event\fP **, \fBconst\fP \fBchar\fP *) const\fR [protected]\fP"

.SS "\fBvoid\fP sc_core::sc_signal_channel::notify_next_delta (\fBsc_event\fP * ev) const\fR [inline]\fP, \fR [protected]\fP"

.SS "\fBsc_signal_channel\fP & sc_core::sc_signal_channel::operator= (\fBconst\fP \fBsc_signal_channel\fP &)\fR [private]\fP"

.SS "\fBconst\fP \fBsc_event\fP & sc_core::sc_signal_channel::value_changed_event () const"

.SH "Member Data Documentation"
.PP 
.SS "\fBsc_event\fP* sc_core::sc_signal_channel::m_change_event_p\fR [mutable]\fP, \fR [protected]\fP"

.SS "\fBsc_dt::uint64\fP sc_core::sc_signal_channel::m_change_stamp\fR [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
