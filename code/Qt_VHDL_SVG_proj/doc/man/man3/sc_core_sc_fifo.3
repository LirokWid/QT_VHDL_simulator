.TH "sc_core::sc_fifo< T >" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sc_core::sc_fifo< T >
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <sc_fifo\&.h>\fP
.PP
Inherits \fBsc_core::sc_fifo_in_if< T >\fP, \fBsc_core::sc_fifo_out_if< T >\fP, and \fBsc_core::sc_prim_channel\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_fifo\fP (int \fBsize_\fP=16)"
.br
.ti -1c
.RI "\fBsc_fifo\fP (\fBconst\fP \fBchar\fP *\fBname_\fP, int \fBsize_\fP=16)"
.br
.ti -1c
.RI "\fBvirtual\fP \fB~sc_fifo\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBregister_port\fP (\fBsc_port_base\fP &, \fBconst\fP \fBchar\fP *)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBread\fP (\fBT\fP &)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBT\fP \fBread\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBbool\fP \fBnb_read\fP (\fBT\fP &)"
.br
.ti -1c
.RI "\fBvirtual\fP int \fBnum_available\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP \fBsc_event\fP & \fBdata_written_event\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBwrite\fP (\fBconst\fP \fBT\fP &)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBbool\fP \fBnb_write\fP (\fBconst\fP \fBT\fP &)"
.br
.ti -1c
.RI "\fBvirtual\fP int \fBnum_free\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP \fBsc_event\fP & \fBdata_read_event\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBoperator T\fP ()"
.br
.ti -1c
.RI "\fBsc_fifo\fP< \fBT\fP > & \fBoperator=\fP (\fBconst\fP \fBT\fP &\fBa\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBtrace\fP (\fBsc_trace_file\fP *tf) \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBprint\fP (::std::ostream &=::std::cout) \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBdump\fP (::std::ostream &=::std::cout) \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP \fBchar\fP * \fBkind\fP () \fBconst\fP"
.br
.in -1c

Public Member Functions inherited from \fBsc_core::sc_interface\fP
.in +1c
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP \fBsc_event\fP & \fBdefault_event\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fB~sc_interface\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBsc_core::sc_prim_channel\fP
.in +1c
.ti -1c
.RI "\fBbool\fP \fBupdate_requested\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBrequest_update\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBasync_request_update\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBsc_core::sc_object\fP
.in +1c
.ti -1c
.RI "\fBconst\fP \fBchar\fP * \fBname\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBchar\fP * \fBbasename\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_simcontext\fP * \fBsimcontext\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBadd_attribute\fP (\fBsc_attr_base\fP &)"
.br
.ti -1c
.RI "\fBsc_attr_base\fP * \fBget_attribute\fP (\fBconst\fP std::string &\fBname_\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_attr_base\fP * \fBget_attribute\fP (\fBconst\fP std::string &\fBname_\fP) \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_attr_base\fP * \fBremove_attribute\fP (\fBconst\fP std::string &\fBname_\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBremove_all_attributes\fP ()"
.br
.ti -1c
.RI "int \fBnum_attributes\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_attr_cltn\fP & \fBattr_cltn\fP ()"
.br
.ti -1c
.RI "\fBconst\fP \fBsc_attr_cltn\fP & \fBattr_cltn\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP std::vector< \fBsc_event\fP * > & \fBget_child_events\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvirtual\fP \fBconst\fP std::vector< \fBsc_object\fP * > & \fBget_child_objects\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBget_parent\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBsc_object\fP * \fBget_parent_object\fP () \fBconst\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBupdate\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBinit\fP (int)"
.br
.ti -1c
.RI "\fBvoid\fP \fBbuf_init\fP (int)"
.br
.ti -1c
.RI "\fBbool\fP \fBbuf_write\fP (\fBconst\fP \fBT\fP &)"
.br
.ti -1c
.RI "\fBbool\fP \fBbuf_read\fP (\fBT\fP &)"
.br
.in -1c

Protected Member Functions inherited from \fBsc_core::sc_fifo_in_if< T >\fP
.in +1c
.ti -1c
.RI "\fBsc_fifo_in_if\fP ()"
.br
.in -1c

Protected Member Functions inherited from \fBsc_core::sc_interface\fP
.in +1c
.ti -1c
.RI "\fBsc_interface\fP ()"
.br
.in -1c

Protected Member Functions inherited from \fBsc_core::sc_fifo_out_if< T >\fP
.in +1c
.ti -1c
.RI "\fBsc_fifo_out_if\fP ()"
.br
.in -1c

Protected Member Functions inherited from \fBsc_core::sc_prim_channel\fP
.in +1c
.ti -1c
.RI "\fBsc_prim_channel\fP ()"
.br
.ti -1c
.RI "\fBsc_prim_channel\fP (\fBconst\fP \fBchar\fP *)"
.br
.ti -1c
.RI "\fBvirtual\fP \fB~sc_prim_channel\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBbefore_end_of_elaboration\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBend_of_elaboration\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBstart_of_simulation\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBend_of_simulation\fP ()"
.br
.ti -1c
.RI "\fBbool\fP \fBasync_attach_suspending\fP ()"
.br
.ti -1c
.RI "\fBbool\fP \fBasync_detach_suspending\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_event\fP &\fBe\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_event_or_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_event_and_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_time\fP &t)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_time\fP &t, \fBconst\fP \fBsc_event\fP &\fBe\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP, \fBconst\fP \fBsc_event\fP &\fBe\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_time\fP &t, \fBconst\fP \fBsc_event_or_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP, \fBconst\fP \fBsc_event_or_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBconst\fP \fBsc_time\fP &t, \fBconst\fP \fBsc_event_and_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP, \fBconst\fP \fBsc_event_and_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwait\fP (int \fBn\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_event\fP &\fBe\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_event_or_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_event_and_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_time\fP &t)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_time\fP &t, \fBconst\fP \fBsc_event\fP &\fBe\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP, \fBconst\fP \fBsc_event\fP &\fBe\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_time\fP &t, \fBconst\fP \fBsc_event_or_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP, \fBconst\fP \fBsc_event_or_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBconst\fP \fBsc_time\fP &t, \fBconst\fP \fBsc_event_and_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnext_trigger\fP (\fBdouble\fP v, \fBsc_time_unit\fP \fBtu\fP, \fBconst\fP \fBsc_event_and_list\fP &\fBel\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBtimed_out\fP ()"
.br
.in -1c

Protected Member Functions inherited from \fBsc_core::sc_object\fP
.in +1c
.ti -1c
.RI "\fBsc_object\fP ()"
.br
.ti -1c
.RI "\fBsc_object\fP (\fBconst\fP \fBchar\fP *\fBnm\fP)"
.br
.ti -1c
.RI "\fBsc_object\fP (\fBconst\fP \fBsc_object\fP &)"
.br
.ti -1c
.RI "\fBsc_object\fP & \fBoperator=\fP (\fBconst\fP \fBsc_object\fP &)"
.br
.ti -1c
.RI "\fBvirtual\fP \fB~sc_object\fP ()"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBadd_child_event\fP (\fBsc_event\fP *\fBevent_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBvoid\fP \fBadd_child_object\fP (\fBsc_object\fP *\fBobject_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBbool\fP \fBremove_child_event\fP (\fBsc_event\fP *\fBevent_p\fP)"
.br
.ti -1c
.RI "\fBvirtual\fP \fBbool\fP \fBremove_child_object\fP (\fBsc_object\fP *\fBobject_p\fP)"
.br
.ti -1c
.RI "\fBphase_cb_mask\fP \fBregister_simulation_phase_callback\fP (\fBphase_cb_mask\fP)"
.br
.ti -1c
.RI "\fBphase_cb_mask\fP \fBunregister_simulation_phase_callback\fP (\fBphase_cb_mask\fP)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "int \fBm_size\fP"
.br
.ti -1c
.RI "\fBT\fP * \fBm_buf\fP"
.br
.ti -1c
.RI "int \fBm_free\fP"
.br
.ti -1c
.RI "int \fBm_ri\fP"
.br
.ti -1c
.RI "int \fBm_wi\fP"
.br
.ti -1c
.RI "\fBsc_port_base\fP * \fBm_reader\fP"
.br
.ti -1c
.RI "\fBsc_port_base\fP * \fBm_writer\fP"
.br
.ti -1c
.RI "int \fBm_num_readable\fP"
.br
.ti -1c
.RI "int \fBm_num_read\fP"
.br
.ti -1c
.RI "int \fBm_num_written\fP"
.br
.ti -1c
.RI "\fBsc_event\fP \fBm_data_read_event\fP"
.br
.ti -1c
.RI "\fBsc_event\fP \fBm_data_written_event\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBsc_fifo\fP (\fBconst\fP \fBsc_fifo\fP< \fBT\fP > &)"
.br
.ti -1c
.RI "\fBsc_fifo\fP & \fBoperator=\fP (\fBconst\fP \fBsc_fifo\fP< \fBT\fP > &)"
.br
.in -1c
.SS "Additional Inherited Members"


Public Types inherited from \fBsc_core::sc_prim_channel\fP
.in +1c
.ti -1c
.RI "enum { \fBlist_end\fP = 0xdb }"
.br
.in -1c

Public Types inherited from \fBsc_core::sc_object\fP
.in +1c
.ti -1c
.RI "\fBtypedef\fP \fBunsigned\fP \fBphase_cb_mask\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<\fBclass\fP \fBT\fP > \fBsc_core::sc_fifo\fP< \fBT\fP >::sc_fifo (int size_ = \fR16\fP)\fR [inline]\fP, \fR [explicit]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBsc_core::sc_fifo\fP< \fBT\fP >::sc_fifo (\fBconst\fP \fBchar\fP * name_, int size_ = \fR16\fP)\fR [inline]\fP, \fR [explicit]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBvirtual\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::~\fBsc_fifo\fP ()\fR [inline]\fP, \fR [virtual]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBsc_core::sc_fifo\fP< \fBT\fP >::sc_fifo (\fBconst\fP \fBsc_fifo\fP< \fBT\fP > &)\fR [private]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<\fBclass\fP \fBT\fP > \fBvoid\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::buf_init (int size_)\fR [inline]\fP, \fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBbool\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::buf_read (\fBT\fP & val_)\fR [inline]\fP, \fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBbool\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::buf_write (\fBconst\fP \fBT\fP & val_)\fR [inline]\fP, \fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBvirtual\fP \fBconst\fP \fBsc_event\fP & \fBsc_core::sc_fifo\fP< \fBT\fP >::data_read_event () const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Implements \fBsc_core::sc_fifo_nonblocking_out_if< T >\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBvirtual\fP \fBconst\fP \fBsc_event\fP & \fBsc_core::sc_fifo\fP< \fBT\fP >::data_written_event () const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Implements \fBsc_core::sc_fifo_nonblocking_in_if< T >\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBvoid\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::dump (::std::ostream & os = \fR::std::cout\fP) const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Reimplemented from \fBsc_core::sc_object\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBvoid\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::init (int size_)\fR [inline]\fP, \fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBvirtual\fP \fBconst\fP \fBchar\fP * \fBsc_core::sc_fifo\fP< \fBT\fP >::kind () const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Reimplemented from \fBsc_core::sc_prim_channel\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBbool\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::nb_read (\fBT\fP & val_)\fR [inline]\fP, \fR [virtual]\fP"

.PP
Implements \fBsc_core::sc_fifo_nonblocking_in_if< T >\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBbool\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::nb_write (\fBconst\fP \fBT\fP & val_)\fR [inline]\fP, \fR [virtual]\fP"

.PP
Implements \fBsc_core::sc_fifo_nonblocking_out_if< T >\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBvirtual\fP int \fBsc_core::sc_fifo\fP< \fBT\fP >::num_available () const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Implements \fBsc_core::sc_fifo_in_if< T >\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBvirtual\fP int \fBsc_core::sc_fifo\fP< \fBT\fP >::num_free () const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Implements \fBsc_core::sc_fifo_out_if< T >\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBsc_core::sc_fifo\fP< \fBT\fP >\fB::operator\fP \fBT\fP ()\fR [inline]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBsc_fifo\fP & \fBsc_core::sc_fifo\fP< \fBT\fP >\fB::operator\fP= (\fBconst\fP \fBsc_fifo\fP< \fBT\fP > &)\fR [private]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBsc_fifo\fP< \fBT\fP > & \fBsc_core::sc_fifo\fP< \fBT\fP >\fB::operator\fP= (\fBconst\fP \fBT\fP & a)\fR [inline]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBvoid\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::print (::std::ostream & os = \fR::std::cout\fP) const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Reimplemented from \fBsc_core::sc_object\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBT\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::read ()\fR [inline]\fP, \fR [virtual]\fP"

.PP
Implements \fBsc_core::sc_fifo_blocking_in_if< T >\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBvoid\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::read (\fBT\fP & val_)\fR [inline]\fP, \fR [virtual]\fP"

.PP
Implements \fBsc_core::sc_fifo_blocking_in_if< T >\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBvoid\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::register_port (\fBsc_port_base\fP & port_, \fBconst\fP \fBchar\fP * if_typename_)\fR [inline]\fP, \fR [virtual]\fP"

.PP
Reimplemented from \fBsc_core::sc_interface\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBvoid\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::trace (\fBsc_trace_file\fP * tf) const\fR [inline]\fP, \fR [virtual]\fP"

.PP
Reimplemented from \fBsc_core::sc_object\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBvoid\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::update ()\fR [inline]\fP, \fR [protected]\fP, \fR [virtual]\fP"

.PP
Reimplemented from \fBsc_core::sc_prim_channel\fP\&.
.SS "template<\fBclass\fP \fBT\fP > \fBvoid\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::write (\fBconst\fP \fBT\fP & val_)\fR [inline]\fP, \fR [virtual]\fP"

.PP
Implements \fBsc_core::sc_fifo_blocking_out_if< T >\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "template<\fBclass\fP \fBT\fP > \fBT\fP* \fBsc_core::sc_fifo\fP< \fBT\fP >::m_buf\fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBsc_event\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::m_data_read_event\fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBsc_event\fP \fBsc_core::sc_fifo\fP< \fBT\fP >::m_data_written_event\fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > int \fBsc_core::sc_fifo\fP< \fBT\fP >::m_free\fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > int \fBsc_core::sc_fifo\fP< \fBT\fP >::m_num_read\fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > int \fBsc_core::sc_fifo\fP< \fBT\fP >::m_num_readable\fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > int \fBsc_core::sc_fifo\fP< \fBT\fP >::m_num_written\fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBsc_port_base\fP* \fBsc_core::sc_fifo\fP< \fBT\fP >::m_reader\fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > int \fBsc_core::sc_fifo\fP< \fBT\fP >::m_ri\fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > int \fBsc_core::sc_fifo\fP< \fBT\fP >::m_size\fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > int \fBsc_core::sc_fifo\fP< \fBT\fP >::m_wi\fR [protected]\fP"

.SS "template<\fBclass\fP \fBT\fP > \fBsc_port_base\fP* \fBsc_core::sc_fifo\fP< \fBT\fP >::m_writer\fR [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
