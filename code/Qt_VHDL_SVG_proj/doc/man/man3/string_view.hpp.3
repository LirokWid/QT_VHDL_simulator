.TH "C:/Users/BJRODIER/Documents/QT_REPO/QT_VHDL_simulator/code/Ressources/SystemC/include/sysc/packages/boost/utility/string_view.hpp" 3 "VHDL simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/BJRODIER/Documents/QT_REPO/QT_VHDL_simulator/code/Ressources/SystemC/include/sysc/packages/boost/utility/string_view.hpp
.SH SYNOPSIS
.br
.PP
\fR#include <sysc/packages/boost/config\&.hpp>\fP
.br
\fR#include <sysc/packages/boost/utility/string_view_fwd\&.hpp>\fP
.br
\fR#include <cstddef>\fP
.br
\fR#include <stdexcept>\fP
.br
\fR#include <algorithm>\fP
.br
\fR#include <iterator>\fP
.br
\fR#include <string>\fP
.br
\fR#include <cstring>\fP
.br
\fR#include <iosfwd>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBsc_boost::detail::string_view_traits_eq< charT, traits >\fP"
.br
.ti -1c
.RI "class \fBsc_boost::basic_string_view< charT, traits >\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBsc_boost\fP"
.br
.ti -1c
.RI "namespace \fBsc_boost::detail\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#\fBdefine\fP \fBSC_BOOST_NO_CXX11_DEFAULTED_FUNCTIONS\fP"
.br
.ti -1c
.RI "#\fBdefine\fP \fBSC_BOOST_NO_CXX11_EXPLICIT_CONVERSION_OPERATORS\fP"
.br
.ti -1c
.RI "#\fBdefine\fP \fBSC_BOOST_NO_CXX11_FUNCTION_TEMPLATE_DEFAULT_ARGS\fP"
.br
.ti -1c
.RI "#\fBdefine\fP \fBSC_BOOST_CONSTEXPR\fP"
.br
.ti -1c
.RI "#\fBdefine\fP \fBSC_BOOST_CXX14_CONSTEXPR\fP"
.br
.ti -1c
.RI "#\fBdefine\fP \fBSC_BOOST_CONSTEXPR_OR_CONST\fP   \fBconst\fP"
.br
.ti -1c
.RI "#\fBdefine\fP \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "#\fBdefine\fP \fBSC_BOOST_THROW_EXCEPTION\fP(what)     \fBthrow\fP what"
.br
.ti -1c
.RI "#\fBdefine\fP \fBSC_BOOST_STRING_VIEW_NO_CXX11_DEFAULTED_NOEXCEPT_FUNCTIONS\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator==\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator!=\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator<\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator>\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator<=\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator>=\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP , \fBtypename\fP \fBAllocator\fP > \fBbool\fP \fBsc_boost::operator==\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBconst\fP std::basic_string< \fBcharT\fP, \fBtraits\fP, \fBAllocator\fP > &y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP , \fBtypename\fP \fBAllocator\fP > \fBbool\fP \fBsc_boost::operator==\fP (\fBconst\fP std::basic_string< \fBcharT\fP, \fBtraits\fP, \fBAllocator\fP > &\fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator==\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBconst\fP \fBcharT\fP *y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator==\fP (\fBconst\fP \fBcharT\fP *\fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP , \fBtypename\fP \fBAllocator\fP > \fBbool\fP \fBsc_boost::operator!=\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBconst\fP std::basic_string< \fBcharT\fP, \fBtraits\fP, \fBAllocator\fP > &y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP , \fBtypename\fP \fBAllocator\fP > \fBbool\fP \fBsc_boost::operator!=\fP (\fBconst\fP std::basic_string< \fBcharT\fP, \fBtraits\fP, \fBAllocator\fP > &\fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator!=\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBconst\fP \fBcharT\fP *y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator!=\fP (\fBconst\fP \fBcharT\fP *\fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP , \fBtypename\fP \fBAllocator\fP > \fBbool\fP \fBsc_boost::operator<\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBconst\fP std::basic_string< \fBcharT\fP, \fBtraits\fP, \fBAllocator\fP > &y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP , \fBtypename\fP \fBAllocator\fP > \fBbool\fP \fBsc_boost::operator<\fP (\fBconst\fP std::basic_string< \fBcharT\fP, \fBtraits\fP, \fBAllocator\fP > &\fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator<\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBconst\fP \fBcharT\fP *y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator<\fP (\fBconst\fP \fBcharT\fP *\fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP , \fBtypename\fP \fBAllocator\fP > \fBbool\fP \fBsc_boost::operator>\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBconst\fP std::basic_string< \fBcharT\fP, \fBtraits\fP, \fBAllocator\fP > &y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP , \fBtypename\fP \fBAllocator\fP > \fBbool\fP \fBsc_boost::operator>\fP (\fBconst\fP std::basic_string< \fBcharT\fP, \fBtraits\fP, \fBAllocator\fP > &\fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator>\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBconst\fP \fBcharT\fP *y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator>\fP (\fBconst\fP \fBcharT\fP *\fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP , \fBtypename\fP \fBAllocator\fP > \fBbool\fP \fBsc_boost::operator<=\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBconst\fP std::basic_string< \fBcharT\fP, \fBtraits\fP, \fBAllocator\fP > &y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP , \fBtypename\fP \fBAllocator\fP > \fBbool\fP \fBsc_boost::operator<=\fP (\fBconst\fP std::basic_string< \fBcharT\fP, \fBtraits\fP, \fBAllocator\fP > &\fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator<=\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBconst\fP \fBcharT\fP *y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator<=\fP (\fBconst\fP \fBcharT\fP *\fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP , \fBtypename\fP \fBAllocator\fP > \fBbool\fP \fBsc_boost::operator>=\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBconst\fP std::basic_string< \fBcharT\fP, \fBtraits\fP, \fBAllocator\fP > &y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP , \fBtypename\fP \fBAllocator\fP > \fBbool\fP \fBsc_boost::operator>=\fP (\fBconst\fP std::basic_string< \fBcharT\fP, \fBtraits\fP, \fBAllocator\fP > &\fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator>=\fP (\fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > \fBx\fP, \fBconst\fP \fBcharT\fP *y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBcharT\fP , \fBtypename\fP \fBtraits\fP > \fBbool\fP \fBsc_boost::operator>=\fP (\fBconst\fP \fBcharT\fP *\fBx\fP, \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > y) \fBSC_BOOST_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBclass\fP \fBcharT\fP , \fBclass\fP \fBtraits\fP > \fBvoid\fP \fBsc_boost::detail::sv_insert_fill_chars\fP (std::basic_ostream< \fBcharT\fP, \fBtraits\fP > &\fBos\fP, std::size_t \fBn\fP)"
.br
.ti -1c
.RI "template<\fBclass\fP \fBcharT\fP , \fBclass\fP \fBtraits\fP > \fBvoid\fP \fBsc_boost::detail::sv_insert_aligned\fP (std::basic_ostream< \fBcharT\fP, \fBtraits\fP > &\fBos\fP, \fBconst\fP \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > &\fBstr\fP)"
.br
.ti -1c
.RI "template<\fBclass\fP \fBcharT\fP , \fBclass\fP \fBtraits\fP > std::basic_ostream< \fBcharT\fP, \fBtraits\fP > & \fBsc_boost::operator<<\fP (std::basic_ostream< \fBcharT\fP, \fBtraits\fP > &\fBos\fP, \fBconst\fP \fBbasic_string_view\fP< \fBcharT\fP, \fBtraits\fP > &\fBstr\fP)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#\fBdefine\fP SC_BOOST_CONSTEXPR"

.SS "#\fBdefine\fP SC_BOOST_CONSTEXPR_OR_CONST   \fBconst\fP"

.SS "#\fBdefine\fP SC_BOOST_CXX14_CONSTEXPR"

.SS "#\fBdefine\fP SC_BOOST_NO_CXX11_DEFAULTED_FUNCTIONS"

.SS "#\fBdefine\fP SC_BOOST_NO_CXX11_EXPLICIT_CONVERSION_OPERATORS"

.SS "#\fBdefine\fP SC_BOOST_NO_CXX11_FUNCTION_TEMPLATE_DEFAULT_ARGS"

.SS "#\fBdefine\fP SC_BOOST_NOEXCEPT"

.SS "#\fBdefine\fP SC_BOOST_STRING_VIEW_NO_CXX11_DEFAULTED_NOEXCEPT_FUNCTIONS"

.SS "#\fBdefine\fP SC_BOOST_THROW_EXCEPTION(what)     \fBthrow\fP what"

.SH "Author"
.PP 
Generated automatically by Doxygen for VHDL simulator from the source code\&.
